{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "23873795",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'tensorflow'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Input \u001b[1;32mIn [184]\u001b[0m, in \u001b[0;36m<cell line: 15>\u001b[1;34m()\u001b[0m\n\u001b[0;32m     13\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m tree\n\u001b[0;32m     14\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mnumpy\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mnp\u001b[39;00m\n\u001b[1;32m---> 15\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtensorflow\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m keras \n\u001b[0;32m     16\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mxgboost\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m XGBRegressor\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'tensorflow'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.metrics import recall_score, precision_score\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn import tree\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "21197777",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>game_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10018</td>\n",
       "      <td>1690</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10580</td>\n",
       "      <td>1394</td>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10600</td>\n",
       "      <td>1908</td>\n",
       "      <td>262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10112</td>\n",
       "      <td>1592</td>\n",
       "      <td>219</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  team_id  game_id\n",
       "0    10189     1664      235\n",
       "1    10018     1690      237\n",
       "2    10580     1394      194\n",
       "3    10600     1908      262\n",
       "4    10112     1592      219"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_user = pd.read_csv('user.csv')\n",
    "df_user.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "392d3a21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>game_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10018</td>\n",
       "      <td>1690</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10580</td>\n",
       "      <td>1394</td>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10600</td>\n",
       "      <td>1908</td>\n",
       "      <td>262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10112</td>\n",
       "      <td>1592</td>\n",
       "      <td>219</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  team_id  game_id\n",
       "0    10189     1664      235\n",
       "1    10018     1690      237\n",
       "2    10580     1394      194\n",
       "3    10600     1908      262\n",
       "4    10112     1592      219"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train_dataset = pd.read_csv('train_dataset_train.csv')\n",
    "df_user.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "3c39bdef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>period</th>\n",
       "      <th>decision_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10625</td>\n",
       "      <td>1</td>\n",
       "      <td>409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10318</td>\n",
       "      <td>3</td>\n",
       "      <td>203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10775</td>\n",
       "      <td>4</td>\n",
       "      <td>420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10236</td>\n",
       "      <td>2</td>\n",
       "      <td>284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10130</td>\n",
       "      <td>3</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  period  decision_id\n",
       "0    10625       1          409\n",
       "1    10318       3          203\n",
       "2    10775       4          420\n",
       "3    10236       2          284\n",
       "4    10130       3           72"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_user_decision = pd.read_csv('user_decision.csv')\n",
    "df_user_decision.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "774d656e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>decision_id</th>\n",
       "      <th>decision_name</th>\n",
       "      <th>Unnamed: 2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Dividend payout in cash</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Dividend payout in stocks</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Zero dividend policy</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>The distribution of the residue after the rein...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Fixed size of dividend payouts sum</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   decision_id                                      decision_name Unnamed: 2\n",
       "0            1                            Dividend payout in cash        NaN\n",
       "1            2                          Dividend payout in stocks        NaN\n",
       "2            3                               Zero dividend policy        NaN\n",
       "3            4  The distribution of the residue after the rein...        NaN\n",
       "4            5                 Fixed size of dividend payouts sum        NaN"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_decision = pd.read_excel('decision.xlsx')\n",
    "df_decision.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "e3fcf26f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>team_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>period</th>\n",
       "      <th>score</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1948</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1934</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>45</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1894</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>24</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1688</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1592</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>21</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   team_id  category_id  period  score  place\n",
       "0     1948            2       0     16      2\n",
       "1     1934            3       4     45      6\n",
       "2     1894            4       8     24      4\n",
       "3     1688            4       0     27      4\n",
       "4     1592            4       2     21      5"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_team_point = pd.read_csv('team_point.csv')\n",
    "df_team_point.head()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "0ebcbd0e",
   "metadata": {},
   "source": [
    "Произведем соединение таблиц, представленных выше"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "f3981dbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>game_id</th>\n",
       "      <th>period_x</th>\n",
       "      <th>decision_id</th>\n",
       "      <th>decision_name</th>\n",
       "      <th>Unnamed: 2</th>\n",
       "      <th>category_id</th>\n",
       "      <th>period_y</th>\n",
       "      <th>score</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>105</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>33</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id  team_id  game_id  period_x  decision_id  \\\n",
       "0    10189     1664      235         3          325   \n",
       "1    10189     1664      235         3          325   \n",
       "2    10189     1664      235         3          325   \n",
       "3    10189     1664      235         3          325   \n",
       "4    10189     1664      235         3          325   \n",
       "\n",
       "                                       decision_name Unnamed: 2  category_id  \\\n",
       "0  R&D enhancement of aesthetic and ergonomic qua...        NaN            3   \n",
       "1  R&D enhancement of aesthetic and ergonomic qua...        NaN            4   \n",
       "2  R&D enhancement of aesthetic and ergonomic qua...        NaN            2   \n",
       "3  R&D enhancement of aesthetic and ergonomic qua...        NaN            1   \n",
       "4  R&D enhancement of aesthetic and ergonomic qua...        NaN            2   \n",
       "\n",
       "   period_y  score  place  \n",
       "0         1    105      2  \n",
       "1         3     33      2  \n",
       "2         2     17      4  \n",
       "3         1      4      2  \n",
       "4         1     21      2  "
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df_user.merge(df_user_decision, on = 'user_id', how = 'left').merge(df_decision, on = 'decision_id', how = 'left').merge(df_team_point, on = 'team_id', how = 'left')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "a7aa0c89",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>game_id</th>\n",
       "      <th>period_x</th>\n",
       "      <th>decision_id</th>\n",
       "      <th>decision_name</th>\n",
       "      <th>Unnamed: 2</th>\n",
       "      <th>category_id</th>\n",
       "      <th>period_y</th>\n",
       "      <th>score</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>105</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>33</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806835</th>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>128</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806836</th>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>42</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806837</th>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>37</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806838</th>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806839</th>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>158</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1806840 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         user_id  team_id  game_id  period_x  decision_id  \\\n",
       "0          10189     1664      235         3          325   \n",
       "1          10189     1664      235         3          325   \n",
       "2          10189     1664      235         3          325   \n",
       "3          10189     1664      235         3          325   \n",
       "4          10189     1664      235         3          325   \n",
       "...          ...      ...      ...       ...          ...   \n",
       "1806835    10471     1518      209         1          114   \n",
       "1806836    10471     1518      209         1          114   \n",
       "1806837    10471     1518      209         1          114   \n",
       "1806838    10471     1518      209         1          114   \n",
       "1806839    10471     1518      209         1          114   \n",
       "\n",
       "                                             decision_name Unnamed: 2  \\\n",
       "0        R&D enhancement of aesthetic and ergonomic qua...        NaN   \n",
       "1        R&D enhancement of aesthetic and ergonomic qua...        NaN   \n",
       "2        R&D enhancement of aesthetic and ergonomic qua...        NaN   \n",
       "3        R&D enhancement of aesthetic and ergonomic qua...        NaN   \n",
       "4        R&D enhancement of aesthetic and ergonomic qua...        NaN   \n",
       "...                                                    ...        ...   \n",
       "1806835               Medium strategy of staff recruitment        NaN   \n",
       "1806836               Medium strategy of staff recruitment        NaN   \n",
       "1806837               Medium strategy of staff recruitment        NaN   \n",
       "1806838               Medium strategy of staff recruitment        NaN   \n",
       "1806839               Medium strategy of staff recruitment        NaN   \n",
       "\n",
       "         category_id  period_y  score  place  \n",
       "0                  3         1    105      2  \n",
       "1                  4         3     33      2  \n",
       "2                  2         2     17      4  \n",
       "3                  1         1      4      2  \n",
       "4                  2         1     21      2  \n",
       "...              ...       ...    ...    ...  \n",
       "1806835            6         4    128      3  \n",
       "1806836            1         2     42      1  \n",
       "1806837            4         4     37      2  \n",
       "1806838            6         1    225      1  \n",
       "1806839            6         0    158      3  \n",
       "\n",
       "[1806840 rows x 11 columns]"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "raw",
   "id": "4e58a562",
   "metadata": {},
   "source": [
    "Произведем подсчет пустых данных и очистим датасет"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "ff93de00",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "missing_values_count = df.isnull().sum()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9a0e9fac",
   "metadata": {},
   "source": [
    "как много пропущенных данных мы имеем"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "3343ac2e",
   "metadata": {},
   "outputs": [],
   "source": [
    "total_cells = np.product(df.shape)\n",
    "totall_missing = missing_values_count.sum()\n"
   ]
  },
  {
   "cell_type": "raw",
   "id": "7d371507",
   "metadata": {},
   "source": [
    "процент пропущенных данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "b9b71df1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9.091060032482627\n"
     ]
    }
   ],
   "source": [
    "percent_missing = (totall_missing/total_cells)*100\n",
    "print (percent_missing)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "dcd9b53f",
   "metadata": {},
   "source": [
    "Как мы видим - пропущено менее 25% данных, что счиатется не критично. Расмотрев более подробно датасет заметим, что  поле\n",
    "Unnamed: 2 почти полностью состоит из пропущенных значений"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "3260aac0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "user_id                0\n",
       "team_id                0\n",
       "game_id                0\n",
       "period_x               0\n",
       "decision_id            0\n",
       "decision_name       4170\n",
       "Unnamed: 2       1802700\n",
       "category_id            0\n",
       "period_y               0\n",
       "score                  0\n",
       "place                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "bf25cb5e",
   "metadata": {},
   "source": [
    "Пропущено почти 99,7% процентов информации в столбце Unnamed: 2. Удалим его."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "56560c02",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Данил\\AppData\\Local\\Temp\\ipykernel_1364\\3725268745.py:1: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n",
      "  df_with_drop = df.drop('Unnamed: 2',1)\n"
     ]
    }
   ],
   "source": [
    "df_with_drop = df.drop('Unnamed: 2',1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "d41406d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "user_id             0\n",
       "team_id             0\n",
       "game_id             0\n",
       "period_x            0\n",
       "decision_id         0\n",
       "decision_name    4170\n",
       "category_id         0\n",
       "period_y            0\n",
       "score               0\n",
       "place               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_with_drop.isnull().sum()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "e138775d",
   "metadata": {},
   "source": [
    "Заменим пропущенные значения автоматически"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "81f76568",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_nfl = df_with_drop.fillna(0).reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "714d03f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>user_id</th>\n",
       "      <th>team_id</th>\n",
       "      <th>game_id</th>\n",
       "      <th>period_x</th>\n",
       "      <th>decision_id</th>\n",
       "      <th>decision_name</th>\n",
       "      <th>category_id</th>\n",
       "      <th>period_y</th>\n",
       "      <th>score</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>105</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>33</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>10189</td>\n",
       "      <td>1664</td>\n",
       "      <td>235</td>\n",
       "      <td>3</td>\n",
       "      <td>325</td>\n",
       "      <td>R&amp;D enhancement of aesthetic and ergonomic qua...</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806835</th>\n",
       "      <td>1806835</td>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>128</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806836</th>\n",
       "      <td>1806836</td>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>42</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806837</th>\n",
       "      <td>1806837</td>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>37</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806838</th>\n",
       "      <td>1806838</td>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1806839</th>\n",
       "      <td>1806839</td>\n",
       "      <td>10471</td>\n",
       "      <td>1518</td>\n",
       "      <td>209</td>\n",
       "      <td>1</td>\n",
       "      <td>114</td>\n",
       "      <td>Medium strategy of staff recruitment</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>158</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1806840 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           index  user_id  team_id  game_id  period_x  decision_id  \\\n",
       "0              0    10189     1664      235         3          325   \n",
       "1              1    10189     1664      235         3          325   \n",
       "2              2    10189     1664      235         3          325   \n",
       "3              3    10189     1664      235         3          325   \n",
       "4              4    10189     1664      235         3          325   \n",
       "...          ...      ...      ...      ...       ...          ...   \n",
       "1806835  1806835    10471     1518      209         1          114   \n",
       "1806836  1806836    10471     1518      209         1          114   \n",
       "1806837  1806837    10471     1518      209         1          114   \n",
       "1806838  1806838    10471     1518      209         1          114   \n",
       "1806839  1806839    10471     1518      209         1          114   \n",
       "\n",
       "                                             decision_name  category_id  \\\n",
       "0        R&D enhancement of aesthetic and ergonomic qua...            3   \n",
       "1        R&D enhancement of aesthetic and ergonomic qua...            4   \n",
       "2        R&D enhancement of aesthetic and ergonomic qua...            2   \n",
       "3        R&D enhancement of aesthetic and ergonomic qua...            1   \n",
       "4        R&D enhancement of aesthetic and ergonomic qua...            2   \n",
       "...                                                    ...          ...   \n",
       "1806835               Medium strategy of staff recruitment            6   \n",
       "1806836               Medium strategy of staff recruitment            1   \n",
       "1806837               Medium strategy of staff recruitment            4   \n",
       "1806838               Medium strategy of staff recruitment            6   \n",
       "1806839               Medium strategy of staff recruitment            6   \n",
       "\n",
       "         period_y  score  place  \n",
       "0               1    105      2  \n",
       "1               3     33      2  \n",
       "2               2     17      4  \n",
       "3               1      4      2  \n",
       "4               1     21      2  \n",
       "...           ...    ...    ...  \n",
       "1806835         4    128      3  \n",
       "1806836         2     42      1  \n",
       "1806837         4     37      2  \n",
       "1806838         1    225      1  \n",
       "1806839         0    158      3  \n",
       "\n",
       "[1806840 rows x 11 columns]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nfl.fillna(method='bfill',axis=0).fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "153c47b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "index            0\n",
       "user_id          0\n",
       "team_id          0\n",
       "game_id          0\n",
       "period_x         0\n",
       "decision_id      0\n",
       "decision_name    0\n",
       "category_id      0\n",
       "period_y         0\n",
       "score            0\n",
       "place            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nfl.isnull().sum()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "b632b997",
   "metadata": {},
   "source": [
    "Данные очищены и теперь можно их проанализировать. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "27d18210",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3    628920\n",
       "4    444330\n",
       "2    433590\n",
       "1    300000\n",
       "Name: period_x, dtype: int64"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nfl.period_x.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "3effa52e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Распределение периода')"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='period_x', data=df_nfl).set_title('Распределение периода')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "0f8d6f08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Распределение действий')"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1080x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[\"decision_id\"].hist(bins = 300).set_title('Распределение действий')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "b87425fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAy8AAANBCAYAAADp04EaAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAD5i0lEQVR4nOzdd3QUVRvH8e9NQm8plISigGBDSui9SotSFBsWBKnSW6SogHTpIE0sr4LYKyhSBKkiiNJFOkgLgYQklBBIMu8fWUIaIQm7myz+PufkJLt7Z+a5Nzuz++wtayzLQkREREREJKtzy+wARERERERE0kLJi4iIiIiIuAQlLyIiIiIi4hKUvIiIiIiIiEtQ8iIiIiIiIi5ByYuIiIiIiLgEJS8iIiIiIpIuxpgPjTHBxpg9t3jcGGNmGWMOGWN2GWMq2+O4Sl5ERERERCS9PgJapPJ4S6Cs7acbMM8eB1XyIiIiIiIi6WJZ1nogNJUibYCFVpzfAU9jjN+dHtfjTncgIiIiIiLpc/38ESuzY0hN9kL3dSeux+SGBZZlLUjHLooBJxLcPmm778ydxKXkRUREREREErElKulJVpIyKe32DvYHaNiYiIiIiIjY30mgRILbxYHTd7pTJS8iIiIiImJvS4AOtlXHagLhlmXd0ZAx0LAxERERERHni43J7AjuiDHmM6AhUNAYcxIYCWQDsCxrPrAMCAAOAVeATnY5rmVl6blCIiIiIiJ3nevBB7P0m/BshcumNGcl02nYmIiIiIiIuAQNGxMRERERcTYrNrMjcEnqeREREREREZeg5EVERERERFyCho2JiIiIiDhbrIaNZYR6XkRERERExCUoeREREREREZegYWMiIiIiIk5mabWxDFHPi4iIiIiIuAQlLyIiIiIi4hI0bExERERExNm02liGqOdFRERERERcgpIXERERERFxCUpeRERERETEJWjOi4iIiIiIs2mp5AxRz4uIiIiIiLgEJS8iIiIiIuISNGxMRERERMTZYmMyOwKXpJ4XERERERFxCUpeRERERETEJWjYmIiIiIiIs2m1sQxRz4uIiIiIiLgEJS8iIiIiIuISNGxMRERERMTZYjVsLCPU8yIiIiIiIi5ByYuIiIiIiLgEDRsTEREREXEyS6uNZYh6XkRERERExCUoeREREREREZegYWMiIiIiIs6m1cYyRD0vIiIiIiLiEpS8iIiIiIiIS1DyIiIiIiIiLkFzXkREREREnE1LJWeIel5ERERERMQlKHkRERERERGXoGFjIiIiIiLOFhuT2RG4JPW8iIiIiIiIS1DyIiIiIiIiLkHDxkREREREnE2rjWWIel5ERERERMQlKHkRERERERGXoGFjIiIiIiLOFqthYxmhnhcREREREXEJSl5ERERERMQlaNiYiIiIiIizabWxDFHPi4iIiIiIuAQlLyIiIiIi4hKUvIiIiIiIiEvQnBcREREREWfTUskZop4XERERERFxCUpeRERERETEJWjYmIiIiIiIk1lWTGaH4JLU8yIiIiIiIi5ByYuIiIiIiLgEDRsTEREREXE2S6uNZYR6XkRERERExCUoeREREREREZegYWMiIiIiIs6mL6nMEPW8iIiIiIiIS1DyIiIiIiIiLkHDxkREREREnE2rjWWIel5ERERERMQlKHkRERERERGXoGFjIiIiIiLOFhuT2RG4JPW8iIiIiIiIS1DyIiIiIiIiLsEpw8aunz9iOeM4rqBf1aGZHUKWcQ2tsiHJhVvXMzuELMNCl04RSRuDyewQsoyvjv+gxriLac6LiIiIiIizaankDNGwMRERERERcQlKXkRERERExCVo2JiIiIiIiLPFathYRqjnRUREREREXIKSFxERERERcQkaNiYiIiIi4mxabSxD1PMiIiIiIiIuQcmLiIiIiIi4BA0bExERERFxNq02liHqeREREREREZeg5EVERERERFyCho2JiIiIiDibho1liHpeRERERETEJSh5ERERERERl6DkRUREREREXILmvIiIiIiIOJllxWR2CC5JPS8iIiIiIuISlLyIiIiIiIhL0LAxERERERFn01LJGaKeFxERERERcQl3lLwYY7LbKxAREREREZHUpDl5McasNcaUTHC7OvCHI4ISEREREbmrWbFZ+yeLSs+clwnAcmPMLKAY0BLo5JCoREREREREkkhz8mJZ1gpjTA9gFXAe8LcsK8hhkYmIiIiIiCSQ5uTFGPMm8AxQH6gArDXGDLIs6ydHBSciIiIiclfSamMZkp5hYwWB6pZlRQKbjTHLgfcBJS8iIiIiIuJwaZ6wb1lWPwBjzAO228cty2rqqMBEREREREQSSs9qY62AHcBy2+1KxpglDopLREREROTuldmrif0HVhsbBVQH1gJY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MR7GmNxADWDfnRw01Z4XY8yrQE+gtDFmV4KH8gGb7uTAIiIiIiLimizLijbG9AZWAO7Ah5Zl7TXG9LA9Pt+yrH3GmOXALiAWeN+yrD13ctzbDRv7FPgZmAAkXLv5omVZoXdyYBERERERcV2WZS0DliW5b36S25OByfY6ZqrJi2VZ4UA40N5eBxQRERER+a+LW8hX0iutc15EREREREQylZIXERERERFxCWldKllEREREROzF9ZdKzhTqeREREREREZeg5EVERERERFyCho2JiIiIiDibho1liHpeRERERETEJSh5ERERERERl6BhYyIiIiIiTmZp2FiGqOdFRERERERcgpIXERERERFxCRo25mRumMwOQSRLMzpHRETSTe8vXJCGjWWIel5ERERERMQlKHkRERERERGXoORFRERERERcgua8iIiIiIg4W2xmB+Ca1PMiIiIiIiIuQcmLiIiIiIi4BA0bExERERFxMktLJWeIel5ERERERMQlKHkRERERERGXoGFjIiIiIiLOpmFjGaKeFxERERERcQlKXkRERERExCVo2JiIiIiIiLPpSyozRD0vIiIiIiLiEpS8iIiIiIiIS7jtsDFjzDvALZdDsCyrr10jEhERERG5y+lLKjMmLT0v24A/gZxAZeCg7acSEOOwyERERERERBK4bc+LZVkfAxhjOgKNLMu6brs9H1jp0OhERERERERs0rPaWFEgHxBqu53Xdp+IiIiIiKSHVhvLkPQkLxOB7caYX223GwCj7B6RiIiIiIhICtKcvFiW9T9jzM9ADdtdQy3LCnJMWCIiIiIiIonddsK+MeZB2+/KxA0TO2H7KWq7T0RERERExOHS0vMyEOgGTE3hMQtobNeIRERERETucloqOWPSstpYN9vvRqmVM8Y0tSxrlb0CExERERERSSgt3/OSVm/bcV8iIiIiIiKJpGe1sdsxdtyXiIiIiMjdS0slZ4g9e140cE9ERERERBzGnsmLiIiIiIiIw9hz2NgxO+7rtso1qET7EZ1wc3djwxer+Xne98nKtB/5CuUb+XMt8hofDp7Nv3uPAjBx41yuXookNjaW2OhYxrYeAkCVgFq07v8MfmWKMa7NMI7vPuzMKt2RfqN7UbNxDaIioxg/YBIH9hxMVsavhC+j5r5BPq98HNh9kLF9JxJ9PZr2PZ6h6ZNNAHB3d+fesvfQ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28AKexw3TbO7LMuKAVrb44AiIiIiIv91VqzJ0j9pUB04ZFnWEcuyrgGfA21SKNcH+AYItke7pWdpit+MMbONMfWMMZVv/NgjCBERERERyTqMMd2MMdsS/HRLUqQYkPA7RE7a7ku4j2LAE8B8e8WVnu95qW37nfBrcy2gsb2CERERERGRzJfwC+dvIaXumaRrqM0AhliWFXNjsa87lZ6lkhvZ5YgiIiIiIv9xsVaW/BqV9DgJlEhwuzhwOkmZqsDntsSlIBBgjIm2LOv7jB40zcPGjDFFjDEfGGN+tt1+2BjTOaMHFhERERERl/UHUNYYU8oYkx14DliSsIBlWaUsyyppWVZJ4Gug550kLpC+OS8fEbdKQFHb7QNA/zs5uIiIiIiIuB7LsqKB3sTlB/uALy3L2muM6WGM6eGo46ZnzktBy7K+NMYMg7iAjTExDopLREREROSuZbn+sDEsy1oGLEtyX4qT8y3L6miPY6an5+WyMcYH20QcY0xNINweQYiIiIiIiNxOenpeBhI3jq20MWYTUAi442/JFBERERERSYv0JC9/A98BV4CLwPfEzXsREREREZF0sJIuKixpkp5hYwuBB4HxwDtAWWCRI4ISERERERFJKj09Lw9YllUxwe1fjTE77R2QiIiIiIhIStKTvGw3xtS0LOt3AGNMDWCTY8ISEREREbl73QVfUpkp0pO81AA6GGP+td2+B9hnjNkNWJZlVbB7dCIiIiIiIjbpSV5aOCwKERERERGR20hz8mJZ1nFHBiIiIiIiIpKa9PS8iIiIiIiIHVia85Ih6VkqWUREREREJNMoeREREREREZegYWMiIiIiIk5mWZkdgWtSz4uIiIiIiLgEJS8iIiIiIuISNGxMRERERMTJYrXaWIao50VERERERFyCkhcREREREXEJThk2ZqHlFG64akVndghZhqVlNiQFA6oOy+wQsozp2yZkdghZRvsq/TM7BMmC9AnsTdesmMwOQdJJX1KZMTrvRURERETEJSh5ERERERERl6DVxkREREREnEyrjWWMel5ERERERMQlKHkRERERERGXoGFjIiIiIiJOpjVXM0Y9LyIiIiIi4hKUvIiIiIiIiEu47bAxY8xSUunZsiyrtV0jEhERERERSUFa5rxMsf1+EvAFPrHdbg8cc0BMIiIiIiJ3NS2VnDG3TV4sy1oHYIwZY1lW/QQPLTXGrHdYZCIiIiIiIgmkZ85LIWNM6Rs3jDGlgEL2D0lERERERCS59CyVPABYa4w5YrtdEuhu94hERERERO5yloaNZUiakxfLspYbY8oCD9ru+seyrCjHhCUiIiIiIpJYWlYba2xZ1hpjzJNJHrrPGINlWd86KDYREREREZF4ael5aQCsAVql8JgFKHkREREREUmH2MwOwEWlZbWxkbbfnVIrZ4x52bKsj+0VmIiIiIiISELpWW3sdvrZcV8iIiIiIiKJpGe1sdvRkgkiIiIiImlg6a1zhtiz58Wy475EREREREQSsWfyovRRREREREQcxp7DxjbZcV8iIiIiInetWI1ZypA0Jy/GmBxAO6Bkwu0syxpt+93b3sGJiIiIiIjckJ6elx+AcOBPIMox4YiIiIiIiKQsPclLccuyWjgsEhERERERkVSkJ3n5zRhT3rKs3Q6LRkRERETkPyBWa11lSHqSl7pAR2PMUeKGjRnAsiyrgkMiExERERERSSA9yUtLh0UhIiIiIiJyG2lOXizLOm6MqQjUs921wbKsnY4JK2WVGlSm08guuLm7s/rzlXw/75tkZV4Z1RX/RlW5FhnF7MEzOLrnSKrbPjfoBao1rUFsbCwRIeHMHjSTC8GhlKlYlu4TegFgjOHLGZ+xdcXvzqtsOnV/qzvVGlUjKjKKaYOmcXjP4WRlipQowtDZQ8nrmZfDew4zpf8Uoq9H07BtQ55+9WkAIi9HMuf1ORzddxSAtp3b0rx9cyzL4tg/x5g+eDrXo647tW5p0fmtblRpVIWoyCjeGTSTIynUv3CJIgyaHUhez3wc2XOYmf2nEX09OtXtc+fPQ69Jfbjn/nvBspgdOJP9f+3n5eGdqPpodaKvXyfoeBDvDJ7JlYjLTq3zrTiqLd7d9D6RlyOJjYklJiaGwMcHAlDyoZL0GN+LnHlyEnwymOl9pxB5KdJ5FU6DhxpU5KkRHXFzd+O3L9awat4Pyco8NbIj5Rr5cy0yikWD53Fy71EKl/bjldn948v4lCjMT9O/Yu2Hyyj28L08N64r2XJkIzY6hi/e/IDjO5O3tat6Y/w01m/aireXJ99/Mj+zw7ljufPlpu+MgRQsWgh3D3eWLPiOX79anaxc+ToVeGl4J4wxXL1ylTmDZhJ0/Eyaj1MroA7PDGhPsTLFGdZ6MId3H4p/7N4HS9JtQk9y581NbGwsQ1sPypTrab22DWjbox0AV69EsuD1eRzfdyxZuV5T+vFwzUfir21zBs/k2N9H03wcV2gLcO57ixsKFi3I9F/m8NWMz1iy4Hun1DOtnP166gqvIY5iadhYhqT5SyqNMf2AxUBh288nxpg+jgosKTc3N7qM6c64l99iwKO9qNu6PsXLlkhUxr9RFfxKFaVPg+7MHzaHbmNfve22P7z7LYNa9CUwoD9/rv6Dp/s9C8C/+48zpNVAAgP6M/blUXQf3xM3d3t+p6f9VG1UlWIli9GlfhdmDZ1F73Epr1r9yrBX+O797+jaoCuXwi/R7NlmAJw9cZYhzwyhV/NefD7rc/pO7AuATxEfWndqTb/H+tGzaU/c3d1p0KqB0+qVVpUbVaFoyaL0rN+deUPn0H3cqymW6zCsI0vf/4FeDbpzOfwSTZ5tetvtu4zqyva1f9Gn8asMaNGXE4dOArBjww76Ne3FgOZ9OX30FO16PeX4iqaBI9sC4M1nX2dgy37xiQtAz0l9WTTxY/o368OW5Ztp2/1Jx1UwA4yb4ZnRrzC34wTGNh1IldZ18C1TLFGZhxtWolApX95q2I/Phr/Hc+M6AxB85AwTA4YwMWAIbz8+lOtXr7FzxVYA2g59gZ9nfs3EgCH8OO1L2g57wel1c6S2AU2ZP21sZodhNy06PMb/27vv+CiK/4/jr0lCCYRQQg2oVAsivfciVcGCDRVE6Ugvgg0EBPWL9KJiA9SfXZoiKApIB+lgowgCUkMJNZDc/P64S0gnl9wlufh+8siD3O7s3cxkd28/O2UP7znEkNb9GfnoC3R66RkCsiW8f9ft1V5M6T+BoW0GsHrBStr3fcStz/nnr4OM7/Eav2/YHWe5n78f/SYPYtYLMxnYvA8jH32RqGtRaSpTap04dJwRjzzP4Fb9+Grq5/R03ahLzEfjPmRomwEMbTPArcAFfKMu0vvaIlrnEV3ZtmJL+hTSDRnxfZrZv0Mk83HnarwLUMtaO8JaOwKoDXTzTrYSKlu5HMcOHOXEoeNEXotkzaJV1GheK06aGs1rseLr5QDs2fonuYJzk69w/mS3jR3d58iVE+t6YNDVK1dxRDkAyJ4je8zyzKh2i9r89LXzDuKfW/8kd3Bu8hfOnyBdxboVWb14NQDLvlpGnZZ1APh98+9cOHcBgD+2/kFIsZCYbfwD/MmeMzt+/n7kCMxB2PEwbxfHbTVb1Gb51z8D8Fcy5b+rbkXWLnY+S3X5Vz9Rq2XtZLcPDAqkfM0KLPvsBwAir0XG3IHcvmprzP7x15Y/CSla0LuFTCFv1UVyipcuzu4NuwBnUFenTV2PlccTSlYuy6mDxwk7dIKoa1FsWbSWii1qxElTsUUNNn7zCwAHtu4hME9uggvli5Pmtnp3cfLgcc4cORWzLGdQIACBwbk4d/yMdwuSzqpXvou8wXkyOhseY62N+XvlzB3IhbMXiIpMeMFsrSVXUC4AcuXJzZnjzrvlOQJz0Ht8P15fOIHxiycn+P6JdmTvYf7dfyTB8koNq3DwjwMxLRwXzp7H4XB4omhu+3PzH1x0ncv+2vInBYq5d/7KSnWR3tcWADVa1OL4P8c49Nc/3i+gmzLi+zSzf4dI5uPOmBcDxD7TR7mWpYsCRUM4dfT6RUPY0VOUq3JbnDQhRUMI+/dkzOvTx8IIKRJyw207DH2SRg824dL5S7zy2Isxy8tVvpXe4/tRsHghpg2cFHOxmtkULFqQk0evl/vUsVMULFqQMyeuX0wF5w/mYvjFmDKcOnqKkKIhCd6rxaMt2Lx8MwBhx8P4ZtY3zFk/h6tXrrLlly1sXbXVy6VxX0jREMJi/32PhVGgaEic8ufJH8zF8Auxyh8WU/6kto+KjCL89Dn6ThhAyTtKsm/nPt5/ZRYRl+M+5qjZo81Zs2iVN4uYYt6qizMnzmAtjPx4NGBZ+skSfvy/pYCzlbJm81ps/HED9e6pR0E3L4S8LW+RApz593rQfeZoGCUrl42TJl+R/HHSnD0WRr6iBQg/eTZmWbW2ddm8cE3M669GzeHZuS/wwAtPYvz8mND+Ze8VQtLs+znfMfz9F3l302xy5g5kUp/x2ETuSr09bDovzB7B1StXuXThEi/cPxSA9n0eYefaHcwcOpVcwbl5fcGb7Fi9LcH5ICmhpYpjreWlua8QHJKXNQtXseCdbzxZxFRp9lhztq7YnOT6DkOe5OF+j7FzzXY+fmMOkVcjs1RdpPe1RY7AHNzfqz1jnhhBu+4PeKtYqZYR36eZ/TvEmzLnVWXm507Ly4fABmPMK8aYV4D1wPteyVUiTCJxUoIvnkRCKWvtDbf9dPzH9KzThVXzV9LqqXtilu/Z9hcDm/dheLvBPND7IbLlyJb6AqSzlNQN8ZJUrFORFo+24IPXPgAgKG8QtZvX5ul6T/NkjSfJmSsnTR5o4p0Me1j88psk9o3ktvcP8Kd0hTIs+Wgxg9sMIOLyFR7sHbd72EN9HiEqMoqV81Z4Itte4Ym6AHi+/XMMuWcAYzq9QutO91C+5p0ATB86ldZP3cOb300iZ1BgTL/nzMIkWuAEiRImiVUn/tn8uevuamxdfH3cW4Mnm/PNmDm8XPdZvh4zhyfe6OmpLIsXVG5UhQO7/6Zbjc4MbT2ALqN7EOhqiYnt3q73Ma7zaHrUfoblX/7EUy87uxBWaliZB3q1Z/ziyYz6bCzZcmSnYPFCKf58/wA/bq9Rnin9J/BS+2HUbFWbu+pl7GSdd9a5i6aPNufj1+Ykuv6T/82lf9PeDGs3iKB8eWLGyWSlukjva4tHBz3Ot+8t4MqlK2nLeDry9vdpZv8OkczHnQH7E40xK3BOmWyAp621Sd6GN8Z0B7oDVClQkdJBt6Qpo2HHTsWJxkOKFYxpzo9JczSMkNBCwO+A847K6ROnCcgecMNtAVYtWMkLH47gi0mfxll+ZO9hIi5f4eZbb4kz4DAj3dvpXlp2aAnAnh17KFTs+hdHwaIFE3TvCj8dTu7g3Pj5++GIclCwWNw0JW8vSf//9WdEpxGcP3segMr1K3Ps0DHCT4cDsGbJGu6odgfL5y33dvFuqHWnNjR3lX/vjj2ExP77Fg1J8Pd1lj8oVvlDOO1KE3YsLNHtrbWEHT3Fnm1/AbB28Roe7HU9eGnyUFOqN6vBiA4vea2cKZEedQHE/H8u7Bwblq6jXOVb+W3jbo7sO8yoJ0cAEFoqlOpN43bJymhnj4WRP/R6K2P+YiGcO3EmXprTcdLkKxoSpxtY+cZVOLTrb86fOhezrFb7Rnw1ajYAW79bz+Ov9/BSCSS1WnVqQ7PHnGP7LoZf4PMJ/wfAsYPOrj7Fy5Rg7/Y9MemDCwRzyx0lrx/zi1bx4txXnCuN4c2eryfoBtV7fD9K3VmaMydOM67z6CTzEnY0jN/W7+L8Gef5devyzZSqUIada3Z4qLTJi10X4zqPJrhAML3e6MPYp0ZxwXXOj++s6ziJvBrJ8i+XXW8p8PG6iJOXdL62KFf5Vmq3rkvH5zuTOzg3Dmu5GnGNJXO+804BUyCjv08z+3eIZD43bHkxxgS7/i8AHAA+Bj4CDrqWJcpaO8taW91aWz2tgQvA3u17KFYqlMI3FSEgWwD12jZg048b4qT5ddlGGrd3tgyUq3Ibl85f4uyJM8luW7RksZjtazSvyZF9zgFkhW8qEjNAv2DxQoSWLs6Jw8fTXA5P+Xbut/Rt3Ze+rfuybuk6mrVvBsBtVW7j4vmLcZp4o+1Yt4P6beoDcPdDd7P+B+dd5EKhhXhp1ku8OeBNjvx9/cvo5JGT3F71dnLkzAFA5XqVObT3kLeLliLfz13MoNb9GdS6PxuWrqdJ+6YA3Or6uydW/l3rdlC3TT0AmjzUjI0/OPeBTT9uSHT7syfPcuroKUJLOwd3V6xXicN7nOWv0qgqD/Rqz7guY7h6JWVdJbwlPeoiR2AOcuZ23qXOEZiDyg2q8M+fBwHIG5IXcLZwPNTvUZZ+/L13C+ymg9v3UahkUUJKFMI/mz9V29Zlx4+/xkmz88dfqflgQwBKVinH5fOX4nQZq96uHpsXrY2zzbkTZyhXuzwAt9atwMkDx7xbEHHbkrmLYwabH9l7hLvqVQIgb8F8hJYuzvF/4v7NLpy7QK48uSlWKhSAig2qcMQ1qHj7yq207nxvTNpSd5YGYObQqQxtMyDZi3WAbSu3cMsdJWPGEJavdWfM+SQ9xK4L/wA/hrzzPNMGTuLo3/8muU2+WGMdarSoHXPM+3pdxJbe1xYvP/w8vet3o3f9bnz3wSLmzfgyQwMXyPjv08z+HeJNFpOpfzIrk1xTH4Ax5ltr7b2uh1PGThz9kMrSN/qQh25p55Hh7lWaVOPpEV3x8/fj5y+W8c30L2nxRCsAfvhkCQBdx/SgcqOqRFyOYOaQqTEtJYltCzDk7eGEli6OdVhOHjnBrBdmcvr4aRo+0JgHej9E5LVIrLV8OeUzNv2wIdF8ueOS9U5zaO8xvanW2Dk14aQhk9izw3k3cdTsUUwZNoXTx09T9OaiDJs+jDz58rBv9z7G9x9P5NVI+r/Rn7pt6nLi8AkAHFEO+t/bH4AnBj1Bw3sbEhUVxf7d+5n83GQir3qmDDnw98j7AHQf05MqjZ1/92lDprBvh/Pv/tLskcwYNo0zx09T5OYiDJ7+HEH5gvh7934m9Z8QU5akti9ZvhTP/q8vAdkCOP7PcaYNmczFcxeZ+cs7ZMueLebO4V9b/+TtF2Z6rDxp4Y26KHJzEYbNcvbZ9g/wZ9X8lXw1/QsA7n2mLa07ObtErF+yjo9eT7wLSkoV98uVpu0TU75xZR4a8RTG34/1X6xg6Yx51H/ibgBWf7IMgEdGP8MdjSpx7fJVPh76Fv/sdE6Fmi1ndl5dN5ORDfty5fz1Qbilq9/GQyM74xfgT2TEVT5/6X0O7XJvNqYbmfTrax59P3cMHfk6m7bu4OzZcEIK5KN3l460b9syw/LTodqANG2fv3AB+kzoT77C+THGMO+tr1nl6u75wuwRvPXcdM6cOE3NlrV5dNDjWIfl4rkLzBg6lROHjpM9R3Y6j+zKbdVuxxjDycMneO2ZMQk+p2bL2nQZ1Z3gAnm5GH6RA7/t59VOrwDQ4IHGPNj7Iay1bFm+mY9fm52mMqVWzzf6ULt1XU7GnPOjGNZ2MBC3LkZ++irBBYIxxnDgt7+Z9cJMrly6kqXqAtL32iK2RwZ04Mqlyx6bKjnKQzMLpff3qae/QwDm/bMo8155x/JDkccy8XRQ0OL4Z5myHm8YvHiCp4KXrMBbwYsv8mTwIlmHN4IXX5WRwUtmk9bgRSSr81TwkhUoePGMzBq8uPOcl3rGmNyu3580xkw0xtzsvayJiIiIiGRNjkz+k1m5M9vYW8AlY0wl4DngIM6xLyIiIiIiIl7nTvASaZ19zO4DplhrpwBZ5wlmIiIiIiKSqbnzkMrzxpjngSeBhsYYf8B3HnwiIiIiIiI+zZ2Wl0eBCKCLtfYYUBwY75VciYiIiIhkYRk9psVXx7y485DKY8DEWK//AeZ6I1MiIiIiIiLx3TB4McasttbWN8acJ/HnvAR7LXciIiIiIiIuNwxerLX1Xf9rcL6IiIiIiAdk5qfYZ2buPOeltjEmT6zXQcaYWt7JloiIiIiISFzuPuflQqzXl1zLREREREREvM6dqZKN6zkvAFhrHcYYd7YXERERERHAoV5jqeJOy8t+Y0w/Y0w2109/YL+3MiYiIiIiIhKbO8FLT6AucAQ4DNQCunsjUyIiIiIiIvG585yXE8BjXsyLiIiIiMh/gkOzjaWKO7ON3WqM+ckYs8v1uqIx5iXvZU1EREREROQ6d7qNvQs8D1wDsNbuQC0xIiIiIiKSTtyZLSyXtXajMXGauCI9nB8RERERkSzP3jiJJMKdlpdTxpgyuOraGPMQcNQruRIREREREYnHnZaXZ4FZwO3GmCPA38ATXsmViIiIiIhIPDcMXowxg2K9XAwsx9licxFoD0z0TtZERERERLImR0ZnwEelpOUlj+v/24AawALAAB2BX7yULxERERERkThuGLxYa0cBGGN+AKpaa8+7Xr8CfOnV3ImIiIiIiLi4M2D/ZuBqrNdXgZIezY2IiIiIiEgS3Bmw/xGw0RgzD+eMYw8Ac7ySKxERERGRLMwR9/EjkkIpDl6stWONMd8DDVyLnrbWbvVOtkREREREROJyp+UFa+0WYIuX8iIiIiIiIpIkt4IXERERERFJO5vRGfBR7gzYFxERERERyTAKXkRERERExCeo21g6y2VU5SLJOWYvZ3QWMo0O1QZkdBYyjU83T87oLGQa2i+ue6/+hYzOQqbR4ZccGZ0FcZMjozPgo9TyIiIiIiIiPkHBi4iIiIiI+AT1YRIRERERSWcOPaMyVdTyIiIiIiIiPkHBi4iIiIiI+AR1GxMRERERSWcO1G8sNW4YvBhjHkxuvbX2G89lR0REREREJHEpaXlp6/q/MFAX+Nn1ugmwAlDwIiIiIiIiXnfD4MVa+zSAMeZboLy19qjrdTFghnezJyIiIiIi4uTOmJeS0YGLy3HgVg/nR0REREQky7MZnQEf5U7wssIYsxT4FGd9PwYs90quRERERERE4klx8GKt7eMavN/AtWiWtXaed7IlIiIiIiISl1tTJbtmFtMAfRERERGRNHBopuRUSclUyauttfWNMeeJ2z3PANZaG+y13ImIiIiIiLikZLax+q7/8ySXzhiT31p7xlMZExERERERic2tbmM38BNQ1YPvJyIiIiKSJTkyOgM+ys+D76WeeyIiIiIi4jWeDF40XbWIiIiIiHiNJ7uNiYiIiIhICuiuf+qo25iIiIiIiPiEFAcvxpg3jTF3JpOkmQfyIyIiIiIikih3uo39AcwyxgQAHwKfWmvPRa+01p72dOZERERERLIiPaQydVLc8mKtfc9aWw/oBJQEdhhj/s8Y08RbmRMREREREYnm1pgXY4w/cLvr5xSwHRhkjPnMC3kTERERERGJkeJuY8aYiUBb4GdgnLV2o2vVG8aYP72RORERERGRrEgPqUydFAUvxhgDnAEqWWsvJZKkpkdzJSIiIiIiEk+Kuo1Zay1wfxKBC7EH7ouIiIiIiHiDO2Ne1htjangtJyIiIiIiIslwZ6rkJkAPY8xB4CLOh1Jaa21Fr+QslhrNa/HY4CdwOBw4oqL4cNR7/PHr7wnSjfnyNXLmDgQgb8G87N22h/91H5fizwnKG8TAGc9RuERhThw+wcTeb3Ax/CL+Af70eqMvpSqUxj/An5VfL2fezK88Vr6UCilWkL6TBpCvUH6sw/Lj/y1l8YeLEqS7s3YFOo/oSkC2AMJPhzPy0RdS/BlB+fIw5O1hlKlYjhVf/cz7I96JWReQLYAuo3twZ+0KWIfl/978iA3fr/NI2VKjzdNtubtDC4wxLPv0B777YGGc9e16PECD+xoB4B/gT/GyJehSpSMXzl1I0furLq7zlbroPb4f1ZpW51zYOQa16JtkujIVyzJu/ngm9RnP+sVrU/z+vlIP0XLlyUW/yYMoGFoI/wB/Fs6ax/Ivf0qQ7q56Fen4wtMYY7hy6QozBk/h2MGjKf6cOm3q8cjADhQvW4Ln2w1h3869Metuub0k3V/rTa6gXDgcDoa3G8y1iGseKV96eWncRH5Zs5EC+fMx/+O3Mzo7aRZapjjPvtmf0neW4dM3P2LhrPmJpvPWfhGQLYDu43pTpmJZrMPy4ah32b1+lyeK5nEBFWsQ2LEP+PlxdcViIhZ9Gnf9HZXIPWgMjpPHALi6aRUR8z4CwOTKTWC3IfiXKAXWcmnWeKL2/pbuZUirnqN6UqNpDSIuRzBh0AT27dqXIE2Rm4owfMZw8uTLw95de3mz/5tEXoukdovadBrSCYfDQVRUFLNemcXuTbsBmL12NpcuXsIR5VzX/57+6V20DKcxL6njTvDS2mu5uIGda7az6ccNgPOLcNCM5+jfrHeCdC8//HzM70PeHs6mHza49Tn3936InWu2M/+tr7m/V3se6P0QH78+hzr31CNb9gAGt+xH9pzZmbxsBqsX/sLJwyfSVjA3RUVFMefVD/h7135y5g7kf99OZMfqbRzecygmTa7g3HR9tSdjO73CqX9PERyS163PuBZxlc/e/ISbb7uFm267Jc66B/s8zLmws/Rr0gtjDEH5gjxSrtS46dabubtDC4a3G0zktUhemvsKm3/exLED179YF74zj4XvzAOgWrMa3Nv1vhRfrIPqIjZfqYvlX/7E93O+pe/EgUmm8fPz48nnO7P9l61uv7+v1EO0Vp3u4fCeQ7ze5VWCCwQzZflbrJq/kshrkXHSdXu1F290G8uRvYdp2bE17fs+wowhU1L8Of/8dZDxPV6jx7i452U/fz/6TR7E1IETOfj7AYLy5SHqWpRHypae7m/TnMfbt+OFMW9mdFY84sLZC3wwchY1W9ZONp239ou7O7QAYHDLfgSH5OXFOSMZ3nYwzh7qmYjxI7Bzfy6+NhTH6ZPkGfMW17asxXHkYJxkkX/u5OKbLybYPLBjHyK3b+LSlFHgH4DJkSO9cu4xNZrUILRUKF0adOH2KrfTZ1wfBrZLeH595vlnmP/efFYuXEmfcX1o+VhLvvvoO7at3sb6H9YDUPL2krzw1gt0b9I9Zrvhjwwn/Ex4upVHsgZ3nvNyEMiHc8axtkA+1zKvu3LpSszvOXLlwJL8CS5n7kAq1K3IRtcBkyMwB73H9+P1hRMYv3gyNZrXSnS7Gs1rsuLrnwFY8fXP1GjhTGct5MiVEz9/P7LnzEHktUgun090+I9XnT1xhr937QfgysXLHNl7mAJFQuKkaXBfQzYsWcepf08BEB52fThSgwca89qCNxm/eDLdx/XGzy/hnz/icgR//Po7VyOuJljX9JG7mTfD2eJkreX8mfOeKprbSpS9ib+2/snVK1dxRDn4bcNuarWsk2T6+vc1ZM2CX2Jeqy6yZl38vnE3F84mH5S17nwvG75fy7lTcYfqZaV6iGatJWeQszU6Z+5ALpy9QFRkwuDBWkuuoFwA5MqTmzPHnc8cTum588jew/y7/0iC5ZUaVuHgHwc4+PsBAC6cPY/D4Xv3GqtXvou8wXkyOhseEx52jn079t4wkPTWflGi3E3sXLsjJi+Xwi9SpmLZtBTJK/zL3I7j+BEcJ49CVCRX1/9Mtmp1U7ZxYC78b6/I1RWLna+jIrGXLnovs15Su0Vtfvra2Vr7x9Y/CAoOIn/h/AnSVapXiVXfrQJg2VfLqOP6Dop9/ZYzV87MF6CKT0px8GKM6Q98AhR2/XxsjEm6X4aH1WxZmyk/zeT5D0cwc+jUZNPWalmbnWu2c/nCZQDa93mEnWt3MLzdYEY+9iIdX+hMjsCEd0DyFczH2RNnAGegkLdgPgDWL15DxKUrvLtpDm+ve5+Fs+a7ddfaGwqVKEzJO0uzZ1vcWaqLlSpOUN4gRn02lje+nUijB53PEC1etgT17q3PS+2HMbTNABwOBw3ub5Tiz8sVnBuAx4Y8wf++m8TgmcNi6icj/PPXQcrXvJOgfHnInjM7VZpUIyS0YKJps+fMTuVGVVn/vbN7kOoi69bFjRQoUoCaLWvzw8dL4izPqvXw/ZzvKFG2BO9ums2EpVP5cNS7iV48vD1sOi/MHsE76z+g4YONmfeWMwhL6bkzKaGlimOt5aW5r/C/7yZxX48HPVU0SQfe2i8O/HaAms1r4efvR+GbilC6Qpkkz1kZya9AQRxh13tYOE6fwi9/oQTp/MuWJ8+4d8n93Gv4FS/pXFa4GPb8OXL1eI6gse8Q2HUw5MiZXln3mJCiITE3QwFOHT1FwaJx/1bB+YO5GH4RR5QjJk1I0es3Vuu2qsus5bMYPWc0k4ZMillurWXsJ2OZ+t1UWj+eYZ17MpQ1mfsns3Kn21gXoJa19iKAMeYNYB0wzRsZi2/j0vVsXLqeO2reyWODn2D0EyOSTFv/voYs++yHmNeVGlamevOatOt2PwDZcmSnYPFCHNl7OEWfXbbyrTgcDrrX7EzuvEGM+fI1dqzexolDx9NUptTKmSsnQ94ezuzR78UEaNH8A/wpXaEsox5/iew5szNu3nj+2vond9WrROm7yvD6wgmA8yI2PN6d5+T4+/tRMLQQf/z6O3PGfMC9Xe+j04tPM23gpBtv7AVH9h5m/tvfMOKT0Vy5eIWDv/2NI5E7ygDV767Jn7/+HhNwqi6ybl3cyNMju/Hx63MS3P3PqvVQuVEVDuz+m1cee4mitxTj5U9G8/vG3QnOG/d2vY9xnUezZ9tftOvxAE+93IW3h01P87nTP8CP22uUZ3jbQURcjmDkp6+yf9dedq7Z4emiihd4a7/4+YsfKVG2BG8smsipIyf5c8sfOCIzY4tcIldv8YL/yAN7CO/fASKuEFCpFrkHjeb84E7g549/yXJcnjOVqH1/ENjxWXK27cCVrz5Mp7x7hvNJGXHFvwFyozRrl6xl7ZK1VKhVgU5DOvHC485xuIMfHMzp46fJG5KXcf83jkP7DrFrQ+Yc+ySZizvBiwFiXxFFkeiR7UpsTHegO0CVAhUpHXRLUkkT1apTG5o95uwXO67zaM6ccDZX/75xN0VuKUae/HkS7ZYRlC8PZSuViztQ3xje7Pl6gubr3uP7UerO0pw5cZpxnUdz9tRZ8hXOz9kTZ8hXOD/nTp0FnF2xtq7YQlRkFOFh5/hz8x+UqVg2Q4IX/wB/hrw9nFXzV7JhScLBwGFHT3H+dDgRlyOIuBzBbxt3U/KOUhgDK75azv/9b26c9DVb1ubh/o8BzrtssQfaxnb+zHmuXLrCxiXOrnjrvltDs0ebe7h07vn58x/5+fMfAXh8aEfCjp1KNF29tg1YvfB6NynVRdaui+SUrliWgdOGAJCnQDBVm1QjKjIqS9VD7HPnxfALfD7h/wA4dvAoJw4dp3iZEuzdvicmfXCBYG65oyR7tv0FwNpFq3hx7ivOlSk8dyYl7GgYv63fFXOu3rp8M6UqlFHwkgGS+k5Nijf3C0eUg9lj3o95PfabNzh64F/3C+VljtMn8QspHPPar0BBHGfjnVsvX+9CHrl9A8a/PyYoGMfpk9jTJ4na9wcAVzf+Qs62HdIl32l171P30qpDKwD+2v4XBWO1ihUsVpCw42Fx0p87fY7cwbnx8/fDEeWgYLGCnD6ecP/atWEXxW4pRnD+YMLPhMekORd2jrVL1nJb5dsUvPggY0wrYArgD7xnrX093vongGGulxeAXtba7Wn5THemSv4Q2GCMecUY8wqwHng/qcTW2lnW2urW2uruBi4AS+YuZmibAQxtMyBOc3SpCqUJyBaQZH/yuvfUY/NPv8aZzWb7yq207nzv9fe4szQAM4dOZWibATEn2V+XbaRx+6YANG7flE0/bgTg1JGTVKjrnFQtR2AOylW5lX/3JezHmx56/68vh/ce5tv3FiS6ftOPG7ijZnnX+JzslKt8K4f3HmLnmh3UaVM3ZgB/UN4gChYvxMal62PqOakLs2ibl23kzjp3Ac5ZaGJPFJARostSMLQgtVrVYXWscRzRcuXJRfnaFeJM3qC6yNp1kZxn63ejt+tn/eK1vPvy22z6YUOWqofY584je49wV71KAOQtmI/Q0sU5/s+xOOkvnLtArjy5KVYqFICKDarE3EFP6bkzKdtWbuGWO0qSPWd2/Pz9KF/rzky9f2RlsfeLGwUu4N39InvO7DHf6xXrVyYq0pEp94uo/X/gV7Q4foWKgn8A2Ws35drmuDcNTd7r4z/8S98OxmAvhGPPncERdgK/YjcBkO3OqkTFG+ifWX0751v6tOpDn1Z9WLd0Hc3aNwPg9iq3c/H8Rc64utfHtmPtDhrc0wCAux+6m3U/OOupWMliMWnKVChDQPYAws+EkyMwB4Gu2WFzBOagasOqHPjzgJdLlvk4MvnPjRhj/IEZOCf1Kg90MMaUj5fsb6CRa3biMcCslNVOMp/rzuApY0xVoD7OFpdfrLUpmq7noVvapWmE1v09H6RR+6ZEXovkasRVPhr7YcxUyS/MHsFbz02PORmP+mws8976mm0rt8Rsnz1HdjqP7Mpt1W7HGMPJwyd47ZkxCT4nKF8eBs98joKhhTj170km9HqDC+cukDNXTp59sz8lyt0ExjmjUfTMTenp9up38OrXb3Dw9wMx3V7+b/xHFAp19sH94RNnP/52PR6gycPNsA7LT5/9GDNtbt176/NA74fw8/MjMjKS915+hz1b/0zwOTNXv0tgnlwEZAvgUvhFxnQcyeE9hyhYvBD9Jg0id3Buwk+fY8aQKXH6wqa3MV++RlB+5+xFc159n51rdtDiCefdoui6aPxQU6o0qsqkvnFnCVJdXJeV6mLA1CHcWacCefIHc+7UWT6f9CkBAf7A9XqI9uyb/dn886aYqZKzUj1Ey1+4AH0m9Cdf4fwYY5j31tesmrcCiHvurNmyNo8OehzrsFw8d4EZQ6dy4tDxFJ87a7asTZdR3QkukJeL4Rc58Nt+Xu30CuCcCOHB3g9hrWXL8s18/NrsVJXl082TU7WdJwwd+Tqbtu7g7NlwQgrko3eXjrRv2zLD8tOh2oA0bZ+vUD7eWDSRwKBcWIeDK5euMODuZ7l84XK67BeFShTmpbmvYK3l9LEwZj43jVNHTqaqLO/V9+7404BKtQjs2Bv8/Lm68nsiFnxC9mZtAbj60yKyN7+fHHe3g6go7LUILn/8FlF7nFMB+99ShsCuQzABAThOHOXSO//DXvJefjv84p3ZzHq/2pvqjatz5fIVJg2exJ4dzpbb0XNGM/m5yZw+fpqiNxeNmSp53659jO8/nmtXr/Fwr4dp1r4ZkZGRXL1ylffHvs/uTbspenNRXn73ZQD8/f1ZsWAFn037zGN5/v7Q95l4xMZ1M296MlPPYND70MfJ1qMxpg7wirW2pev18wDW2teSSJ8f2GWtLZ6WfKU4eDHGFEhk8Xlr7Q0n7E9r8CIiIv9tGRm8ZDZpDV6yEm8HL77EW8GLL1Lw4hnPHv6kB64hIC6zrLUxLSfGmIeAVtbarq7XHXGOj++T2PsZY4YAt0enTy13xrxsAW4CzuBseckHHDXGnAC6WWs3pyUjIiIiIiL/FZlxmorYXIFKct28EgsSEw3IjDFNcE7+VT+t+XJnzMsSoI21tqC1NgRn/7YvgN7AzLRmREREREREfMZhnA0b0UoACWbfMMZUBN4D7rPWhsVf7y53gpfq1tql0S+stT8ADa216wG1VYqIiIiI/HdsAsoZY0oZY7IDjwELYycwxtwMfAN0tNb+5YkPdafb2GljzDAgekTVo8AZ10wDmb3lS0REREQk08jUA15SwFobaYzpAyzFOVXyB9ba3caYnq71bwMjgBBgpuuZQJHW2upp+Vx3gpfHgZHAfNfr1a5l/sAjacmEiIiIiIj4FmvtYmBxvGVvx/q9K5CmAfrxpTh4sdaeAvoaY4KstfGn90j+AQgiIiIiIiJplOIxL8aYusaY34DfXK8rGWM0UF9ERERERNKFO93GJgEtcQ3EsdZuN8Y09EquRERERESyMIdPPI0m83FntjGstYfiLYryYF5ERERERESS5E7LyyFjTF3AuqZD6wf87p1siYiIiIiIxOVO8NITmAIUx/lQmh9wPqBSRERERETcoOeMpI47wctt1tonYi8wxtQD1ng2SyIiIiIiIgm5M+ZlWgqXiYiIiIiIeNwNW16MMXWAukAhY8ygWKuCcT6gUkRERERE3KBuY6mTkm5j2YEgV9o8sZaHAw95I1MiIiIiIiLx3TB4sdauBFYaY2Zbaw+mQ55EREREREQScGfA/iVjzHjgTiBn9EJrbVOP50pEREREJAuzGZ0BH+XOgP1PgD+AUsAo4ACwyQt5EhERERERScCd4CXEWvs+cM1au9Ja+wxQ20v5EhERERERicOdbmPXXP8fNcbcA/wLlPB8lkREREREsjaHyegc+CZ3gpdXjTF5gcE4n+8SDAzwRqZERERERETic6fb2MOAsdbustY2AZoDD3gnWyIiIiIiInG5E7xUtNaejX5hrT0NVPF4jkRERERERBLhTrcxP2NMfmvtGQBjTAE3txcREREREcCR0RnwUe4EHxOAtcaYr3BOTf0IMNYruRIREREREYknxcGLtXauMeZXoClggAettb95LWciIiIiIiKxuNXtyxWsKGAREREREUkDm9EZ8FHuDNgXERERERHJMApeRERERETEJ2i2MBERyfQ6VBuQ0VnIND7dPDmjs5BpPFK1f0ZnIdMI9NPj2n2NQx3HUkUtLyIiIiIi4hMUvIiIiIiIiE9QtzERERERkXSmh1SmjlpeRERERETEJyh4ERERERERn6BuYyIiIiIi6UxzjaWOWl5ERERERMQnKHgRERERERGfoG5jIiIi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D3AOsImeH/IJIMBa+/SNtvVU8CJZi7eCF/FtngxefJ1q4jpvBy++xFPBS1aQkcFLZpMewYuvUPDiGZk1eEnxmBegF/As0A/nmJdfgJneyJSIiIiISFbmSNukW/9Z7gQvAcAUa+1EiHmqZg6v5EpERERERCQed3ol/AQExnodCCzzbHZEREREREQS507LS05rbUynY2vtBWNMLi/kSUREREQkS9PI39Rxp+XlojGmavQLY0x14LLnsyQiIiIiIpKQOy0v/YEvjTH/4px1LBR41Cu5EhERERERiced4KUUUAW4GXgAqA2aJkFERERExF1Wl9Gp4k63sZetteFAPqA5MAt4yxuZEhERERERic+d4CXK9f89wNvW2gVAds9nSUREREREJCF3gpcjxph3gEeAxcaYHG5uLyIiIiIikmrujHl5BGgFvGmtPWuMKQYM9U62RERERESyLofGvKRKioMXa+0l4JtYr48CR72RKRERERERkfjU7UtERERERHyCO93GRERERETEA6xVt7HUUMuLiIiIiIj4BAUvIiIiIiLiE9RtTEREREQknTkyOgM+Si0vIiIiIiLiExS8iIiIiIiIT1C3MRERERGRdGb1kMpUUcuLiIiIiIj4BAUvIiIiIiLiE9RtTEREREQknTnUbSxV1PIiIiIiIiI+QcGLiIiIiIj4BHUbExERERFJZ9aq21hqqOVFRERERER8goIXERERERHxCQpeRERERETEJ6TLmBeDSY+P8QlXbFRGZyHTyGn8MzoLmYafjhFJxFWdL2J0+CVHRmch0wj00/kiWmBog4zOQqZx+d9VGZ0FcZOmSk4dtbyIiIiIiIhPUPAiIiIiIiI+QVMli4iIiIikM6tuY6milhcREREREfEJCl5ERERERMQnqNuYiIiIiEg6c1h1G0sNtbyIiIiIiIhPUPAiIiIiIiI+Qd3GRERERETSmTqNpY5aXkRERERExCcoeBEREREREZ+gbmMiIiIiIunMoY5jqaKWFxERERER8QkKXkRERERExCcoeBEREREREZ+gMS8iIiIiIulMY15SRy0vIiIiIiLiExS8iIiIiIiIT1C3MRERERGRdGatuo2lhlpeRERERETEJyh4ERERERERn6BuYyIiIiIi6UyzjaWOWy0vxphbjDF3u34PNMbk8U62RERERERE4kpx8GKM6QZ8BbzjWlQC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bfbfu/czecD1fSGp7as2qcYzI5zTkf/0xTK+dp1L73m6La07ObtUrl+yjo/fmJsgT48O6MCVS5dTNVXywqObU1MNbpk6ZSwtWzTm0uXLdO06iM1bdgCwaMFcuvccytGjx7ly6SAHDx7m/AXnpBXz5y/m1bGTAejU8RFatmzME08mPhOop1z+d5VX3z85Q0e+zqatOzh7NpyQAvno3aUj7du2zLD8ZCtY2jNfql5WpWi9zBshAFuPrcmU9ehO8LITqARstdZWMsYUAd6z1ra90baeCl6yAm8FL77IU8FLVuCp4EWyFk8FL1mBt4IXX5SW4CWrSY/gxVdkZPCS2Sh48YzMGry485DKy9ZahzEm0hgTDJwASnspXyIiIiIiWVZmntErM3MnePnVGJMPeBfYDFwANia7hYiIiIiIiIe4M9tYdGfNt40xS4Bga+0O72RLREREREQkrhsGL7EfTJnYOmvtFs9mSUREREQka7PqNpYqKWl5mRDr99i1bFyvm3o0RyIiIiIiIom4YfBirW0CYIwJBHoD9XEGLauAt7yaOxERERERERd3BuzPAcKBqa7XHYC5wCOezpSIiIiISFbmyMQPgszM3AlebrPWVor1erkxZrunMyQiIiIiIpIYPzfSbjXG1I5+YYypBazxfJZEREREREQScqflpRbQyRjzj+v1zcDvxpidgLXWVvR47kREREREsiDNNpY67gQvrbyWCxERERERkRtw5yGVB72ZERERERERkeS4M+ZFREREREQkw7jTbUxERERERDxAUyWnjlpeRERERETEJyh4ERERERERn6BuYyIiIiIi6UxTJaeOWl5ERERERMQnKHgRERERERGfoG5jIiIiIiLpTLONpY5aXkRERERExCcoeBEREREREZ+gbmMiIiIiIulMs42ljlpeRERERETEJyh4ERERERERn6BuYyIiIiIi6UyzjaWOWl5ERERERMQnKHgRERERERGfoOBFRERERER8QrqMefny4AKTHp9zI8aY7tbaWRmdj8xAdXGd6sJJ9XCd6uI61cV1qovrVBfXqS6uU124R1Mlp85/reWle0ZnIBNRXVynunBSPVynurhOdXGd6uI61cV1qovrVBfidf+14EVERERERHyUpkoWEREREUln1joyOgs+6b/W8qJ+mNepLq5TXTipHq5TXVynurhOdXGd6uI61cV1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\n",
      "text/plain": [
       "<Figure size 1080x1080 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize']=(15,15)\n",
    "\n",
    "g = sns.heatmap(df_nfl.corr(), square = True, annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "a8562478",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_user_train = df_nfl[df_nfl.user_id.map(lambda x:x in df_train_dataset.id.values)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "a3c38831",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_decision_count = df_user_train.groupby(by=[\"user_id\",\"period_x\"]).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "57e5afcf",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>team_id</th>\n",
       "      <th>game_id</th>\n",
       "      <th>decision_id</th>\n",
       "      <th>decision_name</th>\n",
       "      <th>category_id</th>\n",
       "      <th>period_y</th>\n",
       "      <th>score</th>\n",
       "      <th>place</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user_id</th>\n",
       "      <th>period_x</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"4\" valign=\"top\">10001</th>\n",
       "      <th>1</th>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "      <td>870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "      <td>690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "      <td>1170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "      <td>450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10003</th>\n",
       "      <th>1</th>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "      <td>630</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  index  team_id  game_id  decision_id  decision_name  \\\n",
       "user_id period_x                                                        \n",
       "10001   1           870      870      870          870            870   \n",
       "        2           690      690      690          690            690   \n",
       "        3          1170     1170     1170         1170           1170   \n",
       "        4           450      450      450          450            450   \n",
       "10003   1           630      630      630          630            630   \n",
       "\n",
       "                  category_id  period_y  score  place  \n",
       "user_id period_x                                       \n",
       "10001   1                 870       870    870    870  \n",
       "        2                 690       690    690    690  \n",
       "        3                1170      1170   1170   1170  \n",
       "        4                 450       450    450    450  \n",
       "10003   1                 630       630    630    630  "
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_decision_count.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "a75441dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "for id in df_train_dataset.id.values:\n",
    "  for period in range(1,5):\n",
    "    try :\n",
    "      index = df_train_dataset[df_train_dataset.id == id].index[0]\n",
    "      df_train_dataset.loc[index,\"period_\"+str(period)] = df_decision_count.loc[pd.IndexSlice[id, period:period], :].values[0][0]\n",
    "    except IndexError:\n",
    "      continue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "74add163",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Analytical thinking</th>\n",
       "      <th>Systemic thinking</th>\n",
       "      <th>Adaptability</th>\n",
       "      <th>Focus</th>\n",
       "      <th>period_1</th>\n",
       "      <th>period_2</th>\n",
       "      <th>period_3</th>\n",
       "      <th>period_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10884</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>210.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>840.0</td>\n",
       "      <td>300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10106</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10438</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1860.0</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10130</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>780.0</td>\n",
       "      <td>840.0</td>\n",
       "      <td>1020.0</td>\n",
       "      <td>1980.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10667</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1740.0</td>\n",
       "      <td>2100.0</td>\n",
       "      <td>5820.0</td>\n",
       "      <td>1050.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id  Analytical thinking  Systemic thinking  Adaptability  Focus  \\\n",
       "0  10884                  4.0                4.0           4.0    4.0   \n",
       "1  10106                  5.0                4.0           5.0    5.0   \n",
       "2  10438                  6.0                5.0           5.0    5.0   \n",
       "3  10130                  5.0                4.0           5.0    5.0   \n",
       "4  10667                  4.0                5.0           5.0    5.0   \n",
       "\n",
       "   period_1  period_2  period_3  period_4  \n",
       "0     210.0     420.0     840.0     300.0  \n",
       "1     630.0     630.0     360.0     240.0  \n",
       "2    1860.0    1350.0    1890.0    1140.0  \n",
       "3     780.0     840.0    1020.0    1980.0  \n",
       "4    1740.0    2100.0    5820.0    1050.0  "
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train_dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "3d139eee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                       0\n",
       "Analytical thinking      0\n",
       "Systemic thinking        0\n",
       "Adaptability             0\n",
       "Focus                    0\n",
       "period_1               138\n",
       "period_2               116\n",
       "period_3                53\n",
       "period_4                93\n",
       "dtype: int64"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train_dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "6f0168bf",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Analytical thinking</th>\n",
       "      <th>Systemic thinking</th>\n",
       "      <th>Adaptability</th>\n",
       "      <th>Focus</th>\n",
       "      <th>period_1</th>\n",
       "      <th>period_2</th>\n",
       "      <th>period_3</th>\n",
       "      <th>period_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10884</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>210.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>840.0</td>\n",
       "      <td>300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10106</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10438</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1860.0</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10130</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>780.0</td>\n",
       "      <td>840.0</td>\n",
       "      <td>1020.0</td>\n",
       "      <td>1980.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10667</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1740.0</td>\n",
       "      <td>2100.0</td>\n",
       "      <td>5820.0</td>\n",
       "      <td>1050.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>675</th>\n",
       "      <td>10563</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>120.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>676</th>\n",
       "      <td>10386</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>720.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>677</th>\n",
       "      <td>10675</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>690.0</td>\n",
       "      <td>360.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>678</th>\n",
       "      <td>10366</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1320.0</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>679</th>\n",
       "      <td>10340</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>680 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  Analytical thinking  Systemic thinking  Adaptability  Focus  \\\n",
       "0    10884                  4.0                4.0           4.0    4.0   \n",
       "1    10106                  5.0                4.0           5.0    5.0   \n",
       "2    10438                  6.0                5.0           5.0    5.0   \n",
       "3    10130                  5.0                4.0           5.0    5.0   \n",
       "4    10667                  4.0                5.0           5.0    5.0   \n",
       "..     ...                  ...                ...           ...    ...   \n",
       "675  10563                  5.0                4.0           5.0    4.0   \n",
       "676  10386                  5.0                4.0           5.0    5.0   \n",
       "677  10675                  5.0                4.0           5.0    4.0   \n",
       "678  10366                  4.0                4.0           4.0    4.0   \n",
       "679  10340                  4.0                4.0           4.0    4.0   \n",
       "\n",
       "     period_1  period_2  period_3  period_4  \n",
       "0       210.0     420.0     840.0     300.0  \n",
       "1       630.0     630.0     360.0     240.0  \n",
       "2      1860.0    1350.0    1890.0    1140.0  \n",
       "3       780.0     840.0    1020.0    1980.0  \n",
       "4      1740.0    2100.0    5820.0    1050.0  \n",
       "..        ...       ...       ...       ...  \n",
       "675     300.0      60.0     420.0     120.0  \n",
       "676      30.0     420.0     720.0      30.0  \n",
       "677     120.0     510.0     690.0     360.0  \n",
       "678     300.0    1320.0    1350.0    1140.0  \n",
       "679       NaN       NaN      30.0      60.0  \n",
       "\n",
       "[680 rows x 9 columns]"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train_dataset.fillna(method='bfill',axis = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "d52f6694",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                       0\n",
       "Analytical thinking      0\n",
       "Systemic thinking        0\n",
       "Adaptability             0\n",
       "Focus                    0\n",
       "period_1               138\n",
       "period_2               116\n",
       "period_3                53\n",
       "period_4                93\n",
       "dtype: int64"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train_dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "171460f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Analytical thinking</th>\n",
       "      <th>Systemic thinking</th>\n",
       "      <th>Adaptability</th>\n",
       "      <th>Focus</th>\n",
       "      <th>period_1</th>\n",
       "      <th>period_2</th>\n",
       "      <th>period_3</th>\n",
       "      <th>period_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10884</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>210.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>840.0</td>\n",
       "      <td>300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10106</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10438</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1860.0</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10130</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>780.0</td>\n",
       "      <td>840.0</td>\n",
       "      <td>1020.0</td>\n",
       "      <td>1980.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10667</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1740.0</td>\n",
       "      <td>2100.0</td>\n",
       "      <td>5820.0</td>\n",
       "      <td>1050.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>675</th>\n",
       "      <td>10563</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>120.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>676</th>\n",
       "      <td>10386</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>720.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>677</th>\n",
       "      <td>10675</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>690.0</td>\n",
       "      <td>360.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>678</th>\n",
       "      <td>10366</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>1320.0</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1140.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>679</th>\n",
       "      <td>10340</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30.0</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>680 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  Analytical thinking  Systemic thinking  Adaptability  Focus  \\\n",
       "0    10884                  4.0                4.0           4.0    4.0   \n",
       "1    10106                  5.0                4.0           5.0    5.0   \n",
       "2    10438                  6.0                5.0           5.0    5.0   \n",
       "3    10130                  5.0                4.0           5.0    5.0   \n",
       "4    10667                  4.0                5.0           5.0    5.0   \n",
       "..     ...                  ...                ...           ...    ...   \n",
       "675  10563                  5.0                4.0           5.0    4.0   \n",
       "676  10386                  5.0                4.0           5.0    5.0   \n",
       "677  10675                  5.0                4.0           5.0    4.0   \n",
       "678  10366                  4.0                4.0           4.0    4.0   \n",
       "679  10340                  4.0                4.0           4.0    4.0   \n",
       "\n",
       "     period_1  period_2  period_3  period_4  \n",
       "0       210.0     420.0     840.0     300.0  \n",
       "1       630.0     630.0     360.0     240.0  \n",
       "2      1860.0    1350.0    1890.0    1140.0  \n",
       "3       780.0     840.0    1020.0    1980.0  \n",
       "4      1740.0    2100.0    5820.0    1050.0  \n",
       "..        ...       ...       ...       ...  \n",
       "675     300.0      60.0     420.0     120.0  \n",
       "676      30.0     420.0     720.0      30.0  \n",
       "677     120.0     510.0     690.0     360.0  \n",
       "678     300.0    1320.0    1350.0    1140.0  \n",
       "679       NaN       NaN      30.0      60.0  \n",
       "\n",
       "[680 rows x 9 columns]"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train_dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "1e07afb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA3kAAANdCAYAAAApzbX1AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAADS+0lEQVR4nOzdd3gU1dvG8e/ZJPQiNY0ONqQTRKWF3ptg7wUF60+xgdgQwYoNFVQUKQLSpDfpoCC9Kd2ApIcWSoBkM+8fG0M2WZov2c2O9+e6cpGdeWb2mcNmdp89Z84Yy7IQERERERERe3D4OgERERERERG5clTkiYiIiIiI2IiKPBERERERERtRkSciIiIiImIjKvJERERERERsREWeiIiIiIiIjajIExERERER8RFjzHfGmARjzLbzrDfGmM+MMXuMMVuMMfUutk8VeSIiIiIiIr4zCmh3gfXtgaszfh4DvrrYDlXkiYiIiIiI+IhlWcuBwxcI6QqMtlxWA1cZY0IvtE8VeSIiIiIiInlXOPB3lscHM5adV2CupiMiIiIiIpJLUpP2Wb7O4WLylan6OK5hlv/42rKsry9jF8bDsgset4o8ERERERGRXJJR0F1OUZfdQaB8lsflgJgLbaDhmiIiIiIiInnXDOD+jFk2bwKOWZYVe6EN1JMnIiIiIiL+Kd3p6wz+34wx44FIoLQx5iDwBhAEYFnWcGAO0AHYA5wCHrroPi0rzw9jFRERERERySE1YXeeL2aCyl7t6Zq6XKXhmiIiIiIiIjai4ZoiIiIiIuKfrHRfZ5AnqSdPRERERETERlTkiYiIiIiI2IiGa4qIiIiIiH9K13BNT9STJyIiIiIiYiMq8kRERERERGxERZ6IiIiIiIiN6Jo8ERERERHxS5ZuoeCRevJERERERERsREWeiIiIiIiIjWi4poiIiIiI+CfdQsEj9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8U+aXdMj9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8U/pTl9nkCepJ09ERERERMRGVOSJiIiIiIjYiIZrioiIiIiIf9Lsmh6pJ09ERERERMRGVOSJiIiIiIjYiIo8ERERERERG9E1eSIiIiIi4p/SdU2eJ+rJExERERERsREVeSIiIiIiIjai4ZoiIiIiIuKXLN1CwSP15ImIiIiIiNiIijwREREREREb0XBNERERERHxT5pd0yP15ImIiIiIiNiIijwREREREREb0XBNERERERHxT5pd0yP15ImIiIiIiNiIijwREREREREb0XBNERERERHxT+lOX2eQJ6knT0RERERExEZU5ImIiIiIiNiIijwREREREREb0TV5IiIiIiLin3QLBY/UkyciIiIiImIjKvJERERERERsRMM1RURERETEP6VruKYn6skTERERERGxERV5IiIiIiIiNqLhmiIiIiIi4p80u6ZH6skTERERERGxERV5IiIiIiIiNqLhmiIiIiIi4p80u6ZH6skTERERERGxERV5IiIiIiIiNqLhmiIiIiIi4pcsy+nrFPIk9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8U+6GbpH6skTERERERGxERV5IiIiIiIiNqIiT0RERERExEZ0TZ6IiIiIiPindF2T54l68kRERERERGxERZ6IiIiIiIiNaLimiIiIiIj4J91CwSP15ImIiIiIiNiIijwREREREREb0XBNERERERHxT+lOX2eQJ6knT0RERERExEZU5ImIiIiIiNiIhmv6mdSkfZavc/AHla/p4usU/MLxsym+TsFvnDp72tcp+AWdoC5deNFSvk7BL5xOO+vrFPyCUzMMXrIUvaYuyclTUcbXOVwSvfY9Uk+eiIiIiIiIjajIExERERERsREN1xQREREREf+UruGanqgnT0RERERExEZU5ImIiIiIiNiIijwREREREREb0TV5IiIiIiLin3QLBY/UkyciIiIiImIjKvJERERERERsRMM1RURERETEP+kWCh6pJ09ERERERMRGVOSJiIiIiIjYiIZrioiIiIiIf9JwTY/UkyciIiIiImIjKvJERERERERsRMM1RURERETEL1mW09cp5EnqyRMREREREbERFXkiIiIiIiI2ouGaIiIiIiLinzS7pkfqyRMREREREbERFXkiIiIiIiI2ouGaIiIiIiLinywN1/REPXkiIiIiIiI2oiJPRERERETERlTkiYiIiIiI2IiuyRMREREREf+kWyh4pJ48ERERERERG1GRJyIiIiIiYiMarikiIiIiIv5Jt1DwSD15IiIiIiIiNqIiT0RERERExEZU5HmZMebX8ywfZYzp6e18/j8GDB5K04530u3e3r5OxesiWzZi2ZqZrFw3hyeffcRj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EZGL8VmRZ1lWfV89d15hWZammRQRERERkSvKZ0WeiIiIiIjI/4uPZq/M63TxhIiIiIiIiI2oyBMREREREbERDdcUERERERH/lJ7nJ9f0CfXkiYiIiIiI2IiKPBERERERERvRcE0REREREfFPlmbX9EQ9eSIiIiIiIjaiIk9ERERERMRGVOSJiIiIiIjYiK7JExERERER/6RbKHiknjwREREREREbUZEnIiIiIiJiIxquKSIiIiIifslK1y0UPFFPnoiIiIiIiI2oyBMREREREbERDdcUERERERH/pNk1PVJPnoiIiIiIiI2oyBMREREREbERDdcUERERERH/ZGl2TU/UkyciIiIiImIjKvJERERERERsRMM1RURERETEP2l2TY/UkyciIiIiImIjKvJERERERERsREWeiIiIiIiIjeiaPBERERER8U/puoWCJ+rJExERERERsREVeSIiIiIiIjai4ZoiIiIiIuKfdAsFj9STJyIiIiIiYiPqyfMzx8+m+DoFvxDd6nFfp+AXwn8Z4esU/Mbami/6OgW/EGD0jeqlclqaLOBSGGN8nYJfiDl71Ncp+I3k1JO+TkEk16nIExERERER/6QvzDzScE0REREREREbUZEnIiIiIiJiIxquKSIiIiIi/kmza3qknjwREREREREbUZEnIiIiIiJiIxquKSIiIiIifslK1+yanqgnT0RERERExEZU5ImIiIiIiNiIhmuKiIiIiIh/0uyaHqknT0RERERExEZU5ImIiIiIiNiIijwREREREREb0TV5IiIiIiLin3RNnkfqyRMREREREbERFXkiIiIiIiI2ouGaIiIiIiLin6x0X2eQJ6knT0RERERExEZU5ImIiIiIiNiIhmuKiIiIiIh/0uyaHqknT0RERERExEZU5ImIiIiIiNiIhmuKiIiIiIhfsjRc0yP15ImIiIiIiNiIijwREREREREb0XBNERERERHxTxqu6ZF68kRERERERGxERZ6IiIiIiIiNqMgTERERERGxEV2TJyIiIiIi/ik93dcZ5EnqyRMREREREbGRyy7yjDGvGmO2G2O2GGM2GWMa/ot9PGiMCbvc7S6wv18vI7abMaZ6lsdLjTERHuIijDGfXWRflYwx2/7NtnlVy1ZNWbdhIRs3L+a55x/3GPPeB6+zcfNiVq2eTe3aNwAQHh7KzDnj+H39fFavnUvvJx7MjP/+h89Y8etMVvw6ky3bl7Hi15neOBSvKnhLBOE/f0f4jFEUf+iOHOsLRNSiwoqfCZs4nLCJwyn+2L2Z6xxFC1Pmg9cInzaSsKkjyV/rem+mnqcMGDyUph3vpNu9vX2dik9d1bwOdVd8Rt1fhxH+VPfzxhWpXZWbD/5EqY43ZS4LfawTdZZ+Qp0lH3P1l89h8gd5I2WfKR5Zl1orPqf2qi8IvUBbFa5djRv/nkTJjjdnLgt+pCM1F39CzSWfEPJoJ2+k61WtWzdj46ZFbNm6lL59+3iM+eDDN9iydSlr1sylTp0bMpd/Nfx9oqLWsXbtfI/bPftsL06eiqJUqRK5kLlv3dK8IVNX/Mj0Xyfw4FP35lhfqVoFRs0czuqoxdzX+67M5cFhZRkx+TOmLB/LpKVjuOvR27yZtk81an4TM1dNZM7qSTzy9H051leuVpGxs79hw4HlPNjnbh9k6F3NWjZiyZoZLF83myeefcRjzFtDXmH5utnMXzGFGlne94sVK8rwUR+xePUMFq2eTr0GtQF47uU+/L7tF+Yum8TcZZNo3qqJV45F/NdlDdc0xtwMdALqWZZ1xhhTGsj3L573QWAbEPMvts3BsqxbLiO8GzAL+OMi+1wHrPuX+fzrbX3J4XDw0dA36dblAaKj41iyfBpz5ixi5449mTGt20RStWol6tZuQUSDOgz9ZCAtm/cgLS2NAf0Gs3nzdooUKcyyFdNZsnglO3fs4aEHnsncftDgfiQnH/fF4eUeh4OS/Z4mvvfLpMUnETZuGKeW/UbqvgNuYac3biXhmddybF7ypSdI+XUdiS++DYGBOArm91bmeU63Dq25u0cX+r/9oa9T8R2HgyqDe7H9joGcjT1ErbnvcXjBWlJ2HcwRV3HAfRxdujlzUb6QkoQ+0oFNzf5H+umzXDOiL6W7NibxpyVePggvcTioNLgXO+58i7Oxh7hhzvscnb+WlN0526r8q/dxbOmmzEUFr61A2Xtas73jS6SfTeO6H1/jyKL1nPkr1rvHkEscDgdDPx5I5073Eh0dx4oVM5g9eyE7spzP27aNpFq1ytSqGUmDBnX55NN3iGzWDYCxYyYzYvgPfPPN0Bz7Dg8PpUWLJhw4cDDHOn/ncDh4efDzPHHHc8THJjB27rcsW7CSv3ZFZcYcO5LM+wM+oXn7pm7bOtOcfPzWMHZs3UWhwgUZN/87Vi9f67atHTkcDga8+wK9bn+GuJgEJs7/niXzV7Ava5sdTebdV4fSon0z3yXqJQ6Hg0Hvv8o9tz5GbEwcMxdNYOG8JezeuS8zpnmrJlSqWpGmER2pG1GLdz4aQNfW9wDw5pCXWbpoFb0f7EtQUCAFCxbM3O7b4WP4etgPXj+mPE+3UPDocnvyQoEky7LOAFiWlWRZVowxpqUxZto/QcaY1saYqcaYAGPMKGPMNmPMVmPMc8aYnkAEMC6jJ7CgMaa+MWaZMWa9MWa+MSY0Yz9LjTEfG2OWG2P+NMY0yNjvbmPMoCzPdyLL7y9lPNdmY8y7WZM3xtwCdAE+yHjuqhmrbjPG/G6M2WWMaZIRG2mMmZXx+5vGmO8y8tlnjHmGbIwxVYwxGzNyvKRtjTGvGWN2GGMWGmPGG2NeuMz/jyuqfkRt9u3bT1TU36SmpjJ18iw6dmzlFtOxUyvGj3f9V69bu4nixYsRHFyG+PhENm/eDsCJEyfZuXMPYaHBOZ6j+60dmTxpVu4fjBflr3EtaX/HkBYdB2lpnJy/lEKRl/a9gylciPz1anJi2lzXgrQ00o+fzMVs87aIOjUpXqyor9PwqSJ1q5ESFceZA/FYqWkkTV9JybYNcsSFPtKeQ7NXk5p0zG25CQjAUSAfBDhwFMzH2fjD3krd64rUrcbpqNjMtjo8fSUl2t6YIy7k4Q4cmfObW1sVvDqcExt2kZ5yFpzpJP/2ByXbX/bAlDwrIqIO+/aeO59PnjyTTp3auMV07NSGH8dNBWDt2o0UL16UkJAyAKxa9TuHDx/LsV+A995/jQEDhmDZ8HNVjbrXczDqINEHYkhLTWP+9F+IbNvYLebIoaP8sXkHaalpbsuTEg6xY+suAE6dTOGv3VGUDSnttdx9pWa96hz46yAH97vabO7PC2nRzr0APpx0hG2b/szRZnZUp35Nov46wIH9B0lNTWPm1Lm0ad/cLaZNh+ZMmTADgI3rtlCsWFHKBpemSNHC3HhLfSaMcf1dpqam2e+LcfGayy3yFgDlM4qhL40x/3wlsxi43hhTJuPxQ8D3QB0g3LKsGpZl1QS+tyxrMq5ernssy6oDpAGfAz0ty6oPfAe8k+U5z1qW1RQYDkwHngRqAA8aY0plTc4Y0x5XT11Dy7JqA+9nXW9Z1q/ADOBFy7LqWJa1N2NVoGVZNwL/A944z7FfB7QFbgTeMMZkjoEyxlwLTAEesixr7aVsmzFEtAdQF7gVV+HrU2FhwUQfPPctdnR0HKFh7oVaaGgw0QfPdcDGxMQRFhbiFlOhQji1at/AunWb3Zbf0qgBiQlJ7NsbdeWT96GAsqVJi0vMfJwWn0RA2Zxv7PlrVSds4nDKDnuHoKoVAQgqF0r6kWOUHvgioRO+otTrz2MKFPBa7pL35A8pydnopMzHZ2MPky/E7VRHvpCSlGzfkLjRC9yWn407TMzwGdRfN5wGm7/FefwUx5a5/x3aSb6QUpyNOZT5+GzsIYJCS7rFBIWUpET7hsRna6tTOw5QtGF1AksUwVEwH1e1qEe+MPt8IA8LC+Zg9LlzdXR0bI7zeVhYMAezns+j4wjNdj7PrkPHVsTGxLN1659XNuE8okxIGeKiEzIfJ8QmUjakzAW28Cy0XAjX1ryGbRsuOGjIFsqGlCEu5lybxcck/Ks2s4uQ0LLERMdlPo6NiSc425feIaFlic0SExcTT0hoWSpULMfhpCN8NGwQc5b+xHufvknBQud68h549C7mr5jCB58PpHjxYrl/MOLXLqvIsyzrBFAfeAxIBCYaYx60LMsCxgD3GmOuAm4G5gL7gCrGmM+NMe2AZA+7vRZX0bbQGLMJGACUy7J+Rsa/W4HtlmXFZvQk7gPKZ9tXK1yF5KmMfC/1K+ypGf+uByqdJ2a2ZVlnLMtKAhKAf/5iy+AqPu+1LGvTZWzbGJhuWVaKZVnHAZ9fqGaMybEs+ze1nmPOBRUuXIgx476k38tvc/z4Cbe4nrd1ZvIknx/mleehTbI33Jk/93Cw/T3E3NGb4xOmU/bjt1wrAgLId93VJP80k9g7+2CdPk3xh3Ne0yf/IZfweqo08CH2DxqTY0axgOKFKdm2AesbPsG6Or1wFCpA6R7u36jbioemIts5q+JbD/P3Oznb6vSeaGK/nMZ1E97k2nGvceqPKKw0Z+7l6mUXO1dfakxWBQsW4KWXnuLtt3MO4bSLy20TTwoWKsiHI9/ho9c/5eSJU1cqtTzLY5v5II+84pJeQ+f5vBUYGECN2tcz5vuJdIi8nZRTKTzxP9c1fWO++4km9TrQrmlPEuISGTDIp4O/8pZ0K+//+MBl30LBsiwnsBRYaozZCjwAjMLVczcTOA1MsiwrDThijKmNqxfrSeB24OFsuzS4ireb8exMxr/pWX7/53H2/A3/7tzyz36dHvaZPSZ73DHgb6ARsP0ytvX08cQjY8xjuAprCuQrTb6g3Pn2Jjo6jvByoZmPw8NDiIuNd4uJiYkjvFwYrnoYwsJCiM2ICQwMZMy4L/hp4nRmznD/1jwgIIDOXdrSrHHXXMndl5zxiQRm+dYyMLg0zsRDbjHWyXNv9Ckrf8f0fxrHVcVwxifiTEjk7LYdAJxcuJziD9/pncQlTzoTe4h84ed6lPKFlswx5LJI7apcM/x5AIJKFqVEy3pYznRMYACnDySQdsj1fdrhOaspFnEtSVOWe+8AvOhs7CHyhZ3r5cwXWorUOPe2Kly7KtW+crVVYMmiXNWyPpbTyZF5v5M4fhGJ4xcBUO6Vezgb6/5368+io+MoF35ufrPw8FDiYhNyxpQ7FxPm4ZyfVZUqFalUsRyr18zN2GcIq36dRbOm3YiPTzzvdv4kITaBkPCymY/LhpYhMT7pAlu4CwwM4MORg5gzdQGL59jz7y67+NgEQsLOtVlwWFkS4+zxevg3YmPiCQs/1yMeGhZMQpz7315cTDyhWWJCwoKJj0vAsixiY+LZtH4rAHOmL6RPRpGXlOVzxfjRU/h+wrDcPAyxgcvqyTPGXGuMuTrLojrAfgDLsmJwTaQyAFfRR8bELA7LsqYArwH1MrY7Dvxz4c1OoEzGpC5kDGU8N8XX5VkAPGyMKZSxr5IeYrI+95VwFtcQ0fuNMZczZdRKoLMxpoAxpgjQ8XyBlmV9bVlWhGVZEblV4AFsWL+FqlUrUbFiOYKCgri1ZyfmzFnkFjNn9i/cdZdrBruIBnVITj6e+eY+7Mt32blzL18M+y7HviObN2LXrr3ExMTlWOfvzmzfSWCFcALDQiAwkMJtIzm17De3mIAsM9Dlq3EtGAfpR5NxHjpCWlwigRVdndcFG9Yldd9+r+YvecuJTXsoWDmU/OXLYoICKd21MYfnu8/jtKHhE2y4sQ8bbuzDoVmr2ffK1xye9ztnopMoWv8aHAVd82EVb1yTU9knIbGRE5v2UCBLW5Xs2pgjC9xHzG++qQ+bGvZmU8PeHJ71G1H9vubIvN8BCCxVHIB84aUp2aEhh35e4fVjyC3r12+marVz5/OePTsze/ZCt5jZsxdy9z23AtCgQV2Sk48Td4EP59u376RSpQiqX9+Y6tc3Jjo6jka3dLJNgQewfdMOylcuT1j5UAKDAmnbtRXL5q+65O1fH9qPv3bvZ9yIibmYZd6ybeOfVKhSnvAKrjZr3601S+bb52/pcm3esI3KVSpSvkI4QUGBdL61PQvnLXWLWTh3CT3u7AJA3YhaHE8+QUJ8EokJh4iNjqNKtUoANGrWkN07XVcWlQ0+9+Vf204t2fnnHkQu5HJ78ooAn2cMyUwD9pDRw5RhHFDGsqx/BqGHA98bY/4pJvtl/DsKGG6MScE1tLMn8JkxpnhGTp9w/l6x87Isa54xpg6wzhhzFpgD9M8WNgH4JmMClJ6X+xzned6TxphOuIacnsTVu3exbdYaY2YAm3EVyusuZbvc5HQ6eaHvW0z9eRQBAQ7GjpnMjj938/Ajrimivxs5ngXzl9KmbSSbtizmVMppnuz9MgA33Vyfu+7uzrZtOzJvkTDwzY9YuGApAD16dmKKHYdqAjjTOfzuMIK/GgIOByemzyd1736K9nRNyX588iwKtWpK0ds7QZoT68xZEl85d9np4fe+oMzgfpigQNKiY0l6/b87s+SLb7zL2o1bOHo0mZbd7uWJR+6jR+e2vk7Lu5zp7Ov/LdXHv4YJcBA/YTEpu/4m+H7XpBnZry3L6sTG3Rya9Ru1FnwIaU5ObPuL+LELzxvv95zpRL36Ldf++DomwEHihEWk7Pqbsve52iphzPnbCuDqb18kqERR0lOdRPX/Bucx+0x65HQ66fv860yfMZqAgABGj/6JP//czSOPumbwG/ntOObPW0Lbts3Zum0ZKadSeLz3i5nbjxr1GU2a3kSpUiXYtfs3Bg36mNE//OSrw/Eap9PJe/2H8sX4oTgCHMyYMJt9u/6ix/2uUShTRk+nVJmSjJ33LYWLFsZKT+fuXrfRs9m9XF29Gp1ua8fuP/YwfuH3AAwbMoJVi1f78pByndPpZHC/Dxkx4VMCAhxMGz+LvTv/4vb7XV8I/zR6GqXKlGTiglEUKVqY9PR07n3sTro2udOWw1mdTievvTSYMZOHExAQwMRx09i1Yy/3Pui6pcbYUZNYvHAFzVs3ZcX6OaSknOaFpwZkbv/6y0P4bMS7BOUL4kDUQV54yjUrd/83n6d6zeuwLIuDB6Lp9/xAnxxfXnS5Q6r/K8yVbBhjzDBgo2VZI6/YTm3MGFPEsqwTGT2Py4HHLMvacKFtihepqlfyJdhcrYqvU/AL4b+M8HUKfmNtzRcvHiQEGJ2iLlWLoxc83UuGa4uXu3iQcDbd/jNXXinJqfb5Qic3HTi89ZIvLfKl5Mfb5vk3nmIj5nu9LS/7mrzzMcasB04Cfa/UPv8Dvs64MXsB4IeLFXgiIiIiIiIXc8WKvIzbH8hlsCzrcq7hExERERGRrHQzdI8u9z55IiIiIiIikoepyBMREREREbGRKzZcU0RERERExKs0XNMj9eSJiIiIiIjYiIo8ERERERERG1GRJyIiIiIiYiO6Jk9ERERERPySpWvyPFJPnoiIiIiIiI2oyBMREREREbERDdcUERERERH/pOGaHqknT0RERERExEZU5ImIiIiIiNiIhmuKiIiIiIh/Svd1AnmTevJERERERERsREWeiIiIiIiIjWi4poiIiIiI+CXdDN0z9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8U8arumRevJERERERERsREWeiIiIiIiIjajIExERERERsRFdkyciIiIiIv4p3dcJ5E3qyRMREREREbERFXkiIiIiIiI2ouGaIiIiIiLilyzdQsEj9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8U+aXdMj9eSJiIiIiIjYiIo8ERERERERG9FwTT9z6uxpX6fgF5xp+v7iUqyt+aKvU/AbDbZ+4OsU/EJSt0d8nYLfKLK1gK9T8AtX5yvt6xT8gt71Lt3BwOO+TkGuIM2u6ZnOCSIiIiIiIjaiIk9ERERERMRGNFxTRERERET8k2bX9Eg9eSIiIiIiIjaiIk9ERERERMRGVOSJiIiIiIjYiK7JExERERERv2TpmjyP1JMnIiIiIiJiIyryREREREREbETDNUVERERExD9puKZH6skTERERERGxERV5IiIiIiIiNqLhmiIiIiIi4pc0u6Zn6skTERERERGxERV5IiIiIiIiNqLhmiIiIiIi4p80XNMj9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8UuaXdMz9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8UsarumZevJERERERER8xBjTzhiz0xizxxjzynliIo0xm4wx240xyy62T/XkiYiIiIiI+IAxJgD4AmgNHATWGmNmWJb1R5aYq4AvgXaWZR0wxpS92H7VkyciIiIiIuIbNwJ7LMvaZ1nWWWAC0DVbzN3AVMuyDgBY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NWpej2VZ/H0gmhf+98ZFt/En6c50vnv9G/qPfgNHQABLf/qFg7v/ptU9rr+vX8bNp+ezd1CkRFEeedt1Wwmn00n/zi9wbcT1NO3RnP1/RvHenI8BGP/BWDYtWe+z48kt6c50Rr3+Df0u0E63ZrTTwxntlO508mqWdjrwZxRDMtppok3byelM5+MBn/PRj+/hcDiYPXEuUbv20/W+TgBMHzOLkmVK8M3cryhcpBDp6Ra39erBfZEPU7xkcQaPdM0bGBAQwMKfF/H70rW+PBzxMyb7tVd2Z4yJwnUPu6SLxXqDMWYYsNGyrJGXEn+lhmva3Y5rbHpd2xUWf6jIxYMEgAZb/fQWH16W1O2RiwcJAHW2xl48SIi86rIve/9P8pehWXnBwbTjFw8SVkQv8s20kJcp5pbmef6zcdivS7zelv7Sk2dLxpj1uIaV9vV1LiIiIiIi/say/KIW9br/XJFnWVYlX+fwD8uy6l88SkRERERE5NKpd19ERERERMRG/nM9eSIiIiIiYg+6hYJn6skTERERERGxERV5IiIiIiIiNqLhmiIiIiIi4pesdM2u6Yl68kRERERERGxERZ6IiIiIiIiNaLimiIiIiIj4JcvydQZ5k3ryREREREREbERFnoiIiIiIiI1ouKaIiIiIiPglza7pmXryREREREREbERFnoiIiIiIiI1ouKaIiIiIiPglDdf0TD15IiIiIiIiNqIiT0RERERExEZU5ImIiIiIiNiIrskTERERERG/ZFm+ziBvUk+eiIiIiIiIjajIExERERERsREN1xQREREREb+kWyh4pp48ERERERERG1GRJyIiIiIiYiMarikiIiIiIn7JsjRc0xP15ImIiIiIiNiIijwREREREREb0XBNERERERHxS1a6rzPIm9STJyIiIiIiYiMq8kRERERERGxEwzVFRERERMQvpWt2TY9U5PkZy9cJ+Im0NHVSX4oAo1fUpUrq9oivU/ALpX8e6esU/EbQNV18nYLYSCq6MOlS5TMBvk5BJNfpk7CIiIiIiIiNqMgTERERERGxEQ3XFBERERERv2TpmjyP1JMnIiIiIiJiIyryREREREREbETDNUVERERExC9Z6Rqu6Yl68kRERERERGxERZ6IiIiIiIiNaLimiIiIiIj4JcvydQZ5k3ryREREREREbERFnoiIiIiIiI1ouKaIiIiI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x0n7gDOdqFe/5dofX8cEOEicsIiUXX9T9r42ACSMufAXBVd/+yJBJYqSnuokqv83OI/Z9AJ0ZzrJQz+j5ND3weEgZfZc0v6KolDXzgCcmj6TApHNKNS9KzidWGfOcOSNtzM3L/HOW65r8pxOjg39FOu4/Sc3OJ8X33iXtRu3cPRoMi273csTj9xHj85tfZ2WVzidTl57aTDjJo/AERDAxHHT2LVjL/c+eDsAY0f9xOKFy2nRugkr18/ldEoKzz91bnbN114ezOcj3iNfviD2R/1N34x1g957lXz58zF+6jeAa/KVfn3tM5tkujOd717/hv6j38AREMDSn37h4O6/aXWP63Xzy7j59Hz2DoqUKMojb7tuzeF0Ounf+QUAnvnsearfXIOiJYrx5epvmfTxBJZM/MVnx5Nb0p3pfPv6CAaMfhNHgIPFGe3U5p52ACwYN4+ez95J0RJFeTSjndKdTl7u3BeA/332AjdktNOI1d8x8ePxLJ640FeHk2vSnel8/tow3hs3GIfDwdyJ89m/az+d7nV9ST5r7GxKlCnBV3OGUahIIax0ix6Pdufh5r04deIUn7/2Bf0/f4WgfIHE7o/j/b4+n59P/IjRtVT+JTBfuP7DLsH2KrV8nYJfOJqcczIF8axClSO+TsEvlP55pK9T8BuVr+ni6xT8QqOi1Xydgl9wYu/Ju66kI0779ULnhkUHF/jFOMg1Ybfm+c/GDWOmer0tNVxTRERERETERlTkiYiIiIiI2IiuyRMREREREb+U58dq+oh68kRERERERGxERZ6IiIiIiIiNaLimiIiIiIj4pXTdDN0j9eSJiIiIiIjYiIo8ERERERERG9FwTRERERER8UuWhmt6pJ48ERERERERG1GRJyIiIiIiYiMq8kRERERERGxE1+SJiIiIiIhfSvd1AnmUevJERERERERsREWeiIiIiIiIjWi4poiIiIiI+CUL3ULBE/XkiYiIiIiI2IiKPBERERERERvRcE0REREREfFL6ZavM8ib1JMnIiIiIiJiIyryREREREREbETDNUVERERExC+la3ZNj9STJyIiIiIiYiMq8kRERERERGxEwzVFRERERMQv6WbonqknT0RERERExEZU5ImIiIiIiNiIhmuKiIiIiIhfSvd1AnmUevJERERERERsREWeiIiIiIiIjajIExERERERsRFdkyci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iIikJQ3XTEw9eSIiIiIiIhlERZ6IiIiIiEgG0XBNERERERFJSx50AClKPXkiIiIiIiIZREWeiIiIiIhIBtFwzTSzumBt0CGkhZ1qNA46hLRgZkGHkDZ2qVgv6BAkw4ze67agQ0gLh/z2eNAhpIVl518YdAhpI2fCdkGHICUoqrcyCaknT0REREREJIOoyBMREREREckgGq4pIiIiIiJpSTdDT0w9eSIiIiIiIhlERZ6IiIiIiEgG0XBNERERERFJSxqumZh68kRERERERDKIijwREREREZEMoiJPREREREQkg2hOnoiIiIiIpCUPOoAUpZ48ERERERGRDKIiT0REREREJINouKaIiIiIiKSlqAUdQWpST56IiIiIiEgGUZEnIiIiIiKSQTRcU0RERERE0lI06ABSlHryREREREREMoiKPBERERERkQyi4ZoiIiIiIpKWdDP0xNSTJyIiIiIikkFU5ImIiIiIiGQQDdcUEREREZG0FNWAzYTUkyciIiIiIpJBVOSJiIiIiIhkEBV5IiIiIiIiGURz8kREREREJC1Fgw4gRaknT0REREREJIOoyBMREREREckgGq4pIiIiIiJpSTdQSEw9eSIiIiIiIhlERZ6IiIiIiEgG0XBNERERERFJS1pdMzEVeUkys8uBle7eO8n2zYHP3L3FJo4fATwGVATWAre4+1clFO4/1rFTOx56/C7C4RD9en/Ai8/22KjNw4/fRacjD2PVytVce+Ud/DLx98JjoVCIYaM+IDd7AeecfjkAr731DDvtvAMANWvVZNnSZXQ69OSyuaAycnDHA7jlwesJhUN80u9T3nqpb7HjzXduxgPP3cXue+/KS4+9Rp9X+gPQsEkDHnzxHurWr4O782GfAfR//f0gLqFMHNzxAG7udh3hcIiP3/6MngnydP+zd7L73rvy8mM96NN9fZ66vXA39RrUIRp1Puo7MKPztE/71lxw3yWEwiG+emc4A175qNjxdicdxgmX/wuA1StX88Zd3Zn1x0zqNq7HVc9exzb1tyEadb58exhD3vosiEsoM/80VwCXP3k1bQ5vy7JFS7n5yOvKOvQyVadjK3Z+6EIsHCKn35fMfvGThO1qtNqJNoMf4fdLnyXvszFU2akJe712Q+Hxyts3YOYT7zL3tcFlFHlqufuRZ/h69A/Uqb0Nn/TtHnQ4gaqw7/5Uu/Qa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IiIiIhlERZ6IiIiIiEgG0XBNERERERFJS7oZemLqyRMREREREckgKvJEREREREQyiIZrioiIiIhIWtLN0BNTT56IiIiIiEgGUZEnIiIiIiKSQVTkiYiIiIiIZBDNyRMRERERkbSkGXmJqSdPREREREQkg6jIExERERERySAarikiIiIiImkpGnQAKUo9eSIiIiIiIhlERZ6IiIiIiEgG0XBNERERERFJS671NRNST56IiIiIiEgGUZEnIiIiIiKSQTRcU0RERERE0pJW10xMPXkiIiIiIiIZREWeiIiIiIhIBtFwTRERERERSUtRra6ZkHryREREREREMoh68tJMxDW9NBn1K9QIOoS0kL12SdAhpA19IpacfE2BT1q+nlVJWXb+hUGHkBZq9nor6BDSxnH/1nNKMp/+hREREREREckg6skTEREREZG0pBl5iaknT0REREREJIOoyBMREREREckgGq4pIiIiIiJpSbdQSEw9eSIiIiIiIhlERZ6IiIiIiEgG0XBNERERERFJS7o7a2LqyRMREREREckgKvJEREREREQyiIZrioiIiIhIWnKtrpmQevJEREREREQyiIo8ERERERGRDKLhmiIiIiIikpa0umZi6skTERERERHJICryREREREREMoiGa4qIiIiISFrS6pqJqSdPREREREQkg6jIExERERERySAq8kRERERERDKI5uSJiIiIiEha0i0UElNPnoiIiIiISAZRkSciIiIiIpJBNFxTRERERETSUtR1C4VE1JMnIiIiIiKSQVTkiYiIiIiIZBAN1xQRERERkbSkwZqJqSdPREREREQkg6jIExERERERySAarikiIiIiImkpqgGbCaknT0REREREJIOoJ0+KObzzoTzy+F2EwmH69nqfF559baM2jzxxN52PbM+qlau45orb+Xni71SqVJFPP3+bihUrkpUV5tMBQ3n8kRcAaLH3Hjz13ANUqlSJSEEBt9z0AON//LmsL61Ute2wL1fcfwWhcIjP+3/Ou/95r9jx7XZqyk1P38TOLXai55O9+ODVDwFoumNT7vrPHYXtGjVrRO+n+/DxG5+UZfiBOKTjgdz+0A2EwyE+7DeQN17sU+z4Djtvz4PP382ee+/GC492p+crbwcUadnbp31rzrvvEkLhECPeGc7AVz4qdvyQkw7jhMv/BcDqlat5467uzP5j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n0vX4zP79htSNiyoyYBlzcyaA5+5e1qP66pWtXn5+B/2f9q/TuYMeSxNf67M3XIjAWD7Kg223EioaOGgQ0gbXcJ6TiWjUfleRDZpx+0/J+gQ0kaNHm8FHUJaqFBvx0SzxFNOm8btUv698U8535R5LstbT56IiIiIiGSI8tJhtbXKTZHn7jOJraRZpsysC/D4BrtnuPvJZR2LiIiIiIhkvnJT5AXF3YeShvPzREREREQkPanIExERERGRtBTU6pWprrzdQkFERERERCSjqcgTERERERHJICryREREREREMojm5ImIiIiISFpyzclLSD15IiIiIiIiGURFnoiIiIiISAbRcE0REREREUlLUddwzUTUkyciIiIiIpJBVOSJiIiIiIhkEA3XFBERERGRtKTVNRNTT56IiIiIiEgGUZEnIiIiIiKSQTRcU0RERERE0pJW10xMPXkiIiIiIiIZREWeiIiIiIhIBtFwTRERERERSUtaXTMx9eSJiIiIiIhkEBV5IiIiIiIiGURFnoiIiIiISAbRnDwREREREUlLuoVCYurJExERERERySAq8kRERERERDKIhmuKiIiIiEha0i0UElNPnoiIiIiISAZRkSciIiIiIpJBNFxTRERERETSklbXTEw9eSIiIiIiIhlERZ6IiIiIiEgG0XDNNLNi5UwLOoYNmdml7v5a0HGkOuUpecpVcpSn5ChPyVOukqM8JU+5So7y9M9pdc3E1JMnJeHSoANIE8pT8pSr5ChPyVGekqdcJUd5Sp5ylRzlSUqUijwREREREZEMouGaIiIiIiKSltyjQYeQktSTJyVBY8iTozwlT7lKjvKUHOUpecpVcpSn5ClXyVGepESZ694SIiIiIiKShnaou0/KFzMzFk0s84UTNVxTRERERETSUlSrayak4ZoiIiIiIiIZREWeiIiIiIhIBtFwTZFSYmY3Jti9FPjR3SeUcTgpTbkSERERKTkq8mSrmNm/Nnfc3T8qq1jSQNv416fx7WOBscDlZva+uz8RWGSpR7lKgpl9CLwJDHGtGb1ZZvYE8BCwCvgc2Ae43t37BhpYmjCz3d19UtBxpBozq+Du+Rvsq+fuC4OKKdWYWQjA3aNmVhFoAcx098XBRpbazOxKd/9P0HGkIy0imZhW15StYmZvxX9sABwMfBXf7giMdPfNFoHliZkNBbq6+9/x7erAB8DJxHqo9gwyvlSiXCXHzDoDFwIHAu8DPfVGPDEzm+DurczsZOAk4AZghLvvE2xk6cHMZrt7s6DjSBVm1hHoA1QCxgOXuvvM+LGf3L1NgOGlDDM7CXgViAKXA3cCK4BdgSvc/dNNP7r8SDB6xYA7gEcA3P2ZMg8qjTWrs3fKFzOzF/+i1TUltbn7hQBm9hmwp7vnxLcbAy8HGVsKagasLbKdD2zv7qvMbE1AMaUq5SoJ7v4F8IWZ1QLOBIab2RygB9B3wx6Gcq5C/PsxQH93X2xW5v/GpjQze2FTh4BtyjCUdPAE0MXdfzOzU4i99s519zHE8iUx9xHrNa8CTAT2c/fJZrY98CHrR2uUdw8Ag4HfWP/8CQM1AotIMo6KPPmnmq8r8OLmE/ukTtZ7GxhjZgPi28cD/c2sGvB7cGGlJOUqSWZWFzgHOJdYj0I/oB1wPtAhuMhSzqdmNonYcM0rzaw+sDrgmFLNhcBNQKIPUs4s41hSXUV3/w3A3T8wsz+Aj8zsdtD67UW5ey4U9gZPju+btW4YpwCwF/AMUA14wN1Xmtn57v5AwHGlJd1CITEN15R/xMxeAnYB+hP7B+4MYJq7XxNoYCnGzNoChxD7pO4bdx8XcEgpS7naMjP7CNid2LCxnkU/aDGzce7eNrDgUpCZ1QaWuXvEzKoCNde9ARUws6+Au9392wTHZrj7DgGElZLMbBxwXNHnj5k1BT4DdnJ39cAAZjYe2Dc+H29/d/8hvj8MTHT3FsFGmFrM7ETgVuBZ4Al33zHgkNJS0zotUr6Ymbv41zLv8VeRJ/9YfBGWQ+ObX7v7x0HGk4ri/7A1pEivubvPDi6i1KVcbZmZHePugzfYV8ndNaR1A2Z2XqL97t67rGNJVWZWB1jt7iuDjiXVxefD5rn7xA321wKudveHg4kstZjZfsAv7r56g/3NgXZa+Ghj8Q+gHgAOcPfDgo4nHanIS0xFnkgpMbNriM1PmA9EiPVQubu3DDSwFKRcJSfRAg9a9CExM3uxyGZloBPwk7ufElBIacvMPnT3rkHHkQ6Uq+QoT8lRnpKzbe29Ur6YmffXb1p4RVKbmX3j7u3MbDnF5yGse1NeM6DQUtF1wG7uvijoQNKAcrUZZtYI2BaoYmatWT9RvyZQNbDAUtiGQ8fjPS59Agon3WkIWfKUq+QoT8lRnuQfU5EnW8Xd28W/a/7Bls0hdkNv2TLlavO6ABcATYlN1l9nObElymXLVhKbRyxbL+U/JU8hylVylKfkKE/yj6nIEyk904GRZjaIIqvX6f43CSlXm+HuvYBeZtbV3T8MOp50YGafsv4NUgjYE3gvuIhERKQ0RDX1LCEVeSKlZ3b8q2L8SzZNudoMMzsnvmBB8wQ30VUxnNhTRX4uAGa5+9yggklzug9c8pSr5ChPyVGe5B9TkSdSSnS/m+QpV1tULf69eqBRpJfZQM66Vf7MrIqZNXf3mcGGlZZuCzqANKJcJUd5So7yJP+YVtcUKWFm9py7X7/BcLFC7n5CAGGlJOVKSkv8vmYHu/va+HZFYLS77xdsZKnDzH5hM3N+tLrtespVcpSn5ChPJavRNnukfDGTu+QPra4pkgHWreD31GZbCShXSTGzFzZ33N2vLatY0kjWugIPwN3Xxgs9We+4+Per4t/XvR7PJrZQjaynXCVHeUqO8iSlTj15IqXEzPZ19x832He8u38aVEypSrnaPDM7f3PH4wuzSBFmNhx40d0HxrdPBK51907BRpZ6zGy0ux+ypX2iXCVLeUqO8lQy1JOXmHryREpPDzM7391/ATCzM4HrARUuG1OuNkNF3D9yOdDPzF6Ob88Bzg0wnlRWzczaufs3AGZ2MOvngUpxylVylKfkKE9SalTkiZSeU4APzOxsoB1wHnBksCGlLOVqMzR3ceu5+5/AgWZWndioleVBx5TCLgbejN8wHmAJcFFw4aQ05So5ylNylKcSoFGJiWm4pkgpMrNdgU+I9SKc5O6rgo0odSlXm7ZuOKuZtU903N1HlXVMqS7+puk+4LD4rlFAN3dfGlxUqc3MahJ7X6AcbYFylRzlKTnK0/+nYa3dU76Ymb90UpkP11SRJ1LCEqya1QBYSvwm31o1az3lauvFFw/ZnVjeJhddXETWM7MPgV+BdUNdzwX2cfd/BRdValJBnDzlKjnKU3KUp5KhIi8xFXkiJczMtt/ccXefVVaxpDrlauuY2bFAd+BPYjfJ3QG4zN2HBBpYCjKzCe7eakv7RAXx1lCukqM8JUd5Khn1a+2W8sVM3tLJKvJEMomZhYGGFJn/6u6zg4sodSlXW2Zmk4Dj3H1afHsnYJC77x5sZKnHzL4DbimyoMEhwFPuflCwkaUeFcTJU66SozwlR3kqGSryEtPCKyKlxMyuITYMYz4Qje92QEMQN6BcJW3BugIvbjqwIKhgUtzlQO8iCxr8BWz2VhTl2KoNVvg7BNCc2MSUq+QoT8lRnqTUqCdPpJSY2TTgAHdfFHQsqU652jwzWzd05whge+A9YkXwqcTm5d0UVGypxsyaFe0Bji9ogLsvCy6q1GZmrYgNF6tFbBjwYuACd58YZFypSLlKjvKUHOWpZNSruWvKFzMLl03RcE2RTGFmI4Aj3L0g6FhSnXK1eWb21mYOu7trye04M/vJ3dvEf/7Q3bsGHVO6UEGcPOUqOcpTcpSn/4+KvMQ0XFOk9EwHRprZIOKrRQK4+zPBhZSylKvNcPcLg44hjRT9h3THwKJIA2Z2jrv3NbMbN9gP6PVXlHKVHOUpOcqTlAUVeSKlZ3b8q2L8SzZNuUqCmVUmdvPcvYDK6/arJ68Y38TPsrFq8e81Ao0iPShXyVGekqM8laCoRiUmpOGaIiJpwszeByYBZwHdgLOBP9z9ukADSyFmFgFWEOvRqwKsXHeI2NDWmkHFloriq9pe6+7PBh1LqlOukqM8JUd5Kjl1auyS8sXM4uVTNSdPJN2Z2XPufr2ZfUqCngR3PyGAsFKScrV1zGy8u7c2s5/dvaWZVQCGuvvhQccm6cvMRrh7x6DjSAfKVXKUp+QoTyVDRV5iGq4pUvL6xL8/FWgU6UG52jr58e9LzKwFkAs0Dy4cyRDfmtlLwLvEekEBcPefggspZSlXyVGekqM8lQB1WCWmnjwRkTRhZpcAHwJ7Az2B6sA97v5qkHFJeouvbrshVw/xxpSr5ChPyVGeSkbt6junfDHz19/TNFxTJFPEb2p6P7H7mmWxfk6QVvzbgHKVHDPbwd1nbGmfiIhIeaEiL7FQWf9CkXLkDeAZoB2wH9A2/l02plwl58ME+z4o8ygko5hZQzN7w8yGxLf3NLOLg44rFSlXyVGekqM8lYwonvJfQVCRJ1J6lrr7EHdf4O6L1n0FHVSKUq42w8x2N7OuQC0z+1eRrwsocisFkX+oJzAUaBLfngJcH1QwKa4nylUyeqI8JaMnypOUEhV5IiXMzNqYWRtghJk9aWYHrdsX3y9xylXSdgOOA7YBji/y1Qb4d3BhSYao5+7vAVEAdy8AIsGGlLKUq+QoT8lRnqTUaHVNkZL39AbbbYv87IAmVK+nXCXB3QcAA8zsIHf/Luh4JOOsMLO6xG9jYmYHAkuDDSllKVfJUZ6SozxJqVGRJ1LC1t3zxsx2dPfpRY+ZmRYSKUK52mrz4/cUPJDYm4LvgBs2zJ3IVroRGAjsaGajgfrAKcGGlLKUq+QoT8lRnkqAFpFMTMM1RUpPogUx3i/zKNKDcpWct4H3gMbE5nC8D/QPNCLJBL8DHwNjgflAD2Jzg2RjylVylKfkKE9SatSTJ1LCzGx3YC/ii2QUOVQTLZJRjHK11czd+xTZ7mtmVwcWjWSK3sAy4JH49plAH+DUwCJKXcpVcpSn5ChPUmpU5ImUvA0XyVhnOVokY0PK1dYZYWa3A+8QG655OjDIzOoAuPviIIOTtLWbu+9TZHuEmU0MLJrUplwlR3lKjvJUAqIarpmQijyREqZFMpKnXG210+PfL9tg/0XEij7NY5R/YryZHejuYwDM7ABgdMAxpSrlKjnKU3KUJyk1psmKIiIi5ZeZ/UGsV312fFcz4A9iy7q7u7cMKrZUo1wlR3lKjvJUMqpX3SHli5m/V86wsv6d6skTEUkjZtYC2JMicxbdvXdwEUkGOCroANKIcpUc5Sk5ylMJcFK+xguEevJERNKEmd0HdCBW5A0Gjga+cXctuS0iIuVStarNU76YWbFypnryRNKdmd24uePu/kxZxZIuzOwR4Al3XxLfrg3c5O53BxpY6jkF2AcY7+4XmllD4PWAYxIREZEUoyJPpOTVCDqANHS0u9+5bsPd/zKzYwAVecWtcveomRWYWU1gAVpsRUREyjGtrpmYijyREubuDwQdQxoKm1kld18DYGZVgEoBx5SKxpnZNsRumPsj8DfwQ6ARiYiISMrRnDyRUmJmlYGLid3su+giGRcFFlSKMrNbgROAt4jdCuAiYKC7PxFoYCnMzJoDNd3956BjERERCUqVKtunfDGzatUszckTySB9gElAF6AbcDaxpZFlA+7+hJn9AnQCDHjQ3YcGHFbKMLM2mzvm7j+VZTwiIiKpQh1WiaknT6SUmNl4d29tZj+7e0szqwAMdffDg45N0ouZjYj/WBloC0wkVgy3BL5393ZBxSYiIhKkypWbpXwxs3r17DLvyQuV9S8UKUfy49+XxO9tVgtoHlw4qcfMvol/X25my4p8LTezZUHHlyrcvaO7dwRmAW3cva277wu0BqYFG52IiIikGg3XFCk9r8VvBXA3MBCoDtwbbEipZV0PlLtrRdLk7O7uv6zbcPdfzaxVgPGIiIhICtJwTRFJCfGCeDuKfPikuWbFmVl/YAXQl9gCNecA1dz9rEADExERCUilytulfDGzZvWczQ7XNLOjgOeBMPC6uz+2wXGLHz8GWAlcsKX3SOrJEyklusF38szsQeACYDoQje92QPMXi7sQuAK4lticvJ/QEGAREZG0ZWZh4GXgCGAuMNbMBrr770WaHQ3sEv86AHgl/n2TNCdPpPQcva7Ag9gNvol9AiMbOw3Yyd3br5t/pgVqNubuq4ERxObhtSG2Gun4QIMSERGR/8f+wDR3n+7ua4F3gBM3aHMi0NtjxgDbmFnjzZ1UPXkipUc3+E7er8A2wIKA40hJZrYrcAZwJrAIeBfA3TsEGJaIiEjg0mHqmZldClxaZNdr7v5a/OdtgTlFjs1l4166RG22BXI29TtV5ImUnr7Al2ZW9AbfvYINKWU9Cow3s1+BNet2uvsJwYWUUiYB/wWOd/dpAGZ2Q7AhiYiISDLiBd1rmzicaL7ehpVrMm2KUZEnUkp0g++t0gt4HPiF9XPyZL2uxHryRpjZ58SGcpT5PXdERESkxM0ltvDcOk2B7H/QphitrikigTOzUe7ePug4Up2ZVQNOIjZs83BixfHH7j4syLhERESCUqHitilfzOSvnbfJD2bNLAuYQqxTYB4wFjjL3X8r0uZY4GpiazscALzg7vtv7neqyBMpYWb2jbu3M7PlFO9KN8DdvWZAoaUsM3uG2DDNgRQfrqlbKGyCmdUBTgVO1yI1IiJSXqV7kQdgZscAzxG7hcKb7v6wmV0O4O7d47dQeAk4itgtFC5093GbPaeKPBEJmpmNSLDbVbyIiIjI5mRCkVcaNCdPpJSYWR93P3dL+wTcvWPQMYiIiEj6SfkKLyC6T55I6dmr6EZ8zPW+AcWS0sysoZm9YWZD4tt7mtnFQcclIiIiko5U5ImUMDO7Iz4fr6WZLYt/LQfmAwMCDi9V9QSGAk3i21OA64MKRkRERCSdaU6eSCkxs0fd/Y6g40gHZjbW3fczs/Hu3jq+b4K7two4NBEREZG0o548kdKzq5kdY2Z6nW3ZCjOrS3xovZkdCCwNNiQRERGR9KSePJFSYmadgQuBA4H3gZ7uPinYqFKTmbUBXgRaAL8C9YFT3X1ioIGJiIiIpCEVeSKlzMxqEbt59V3AHKAH0Nfd8wMNLIWYWSUgAuxG7H6Ck4GQu6/Z7ANFREREZCMq8kRKUXwI4jnAuUA20A9oB+zt7h0CDC2lmNlP7t5mS/tEREREZMt0nzyRUmJmHwG7A32A4909J37oXTMbF1xkqcPMGgHbAlXMrDWxXjyAmkDVwAITERERSWPqyRMpJWZ2uLt/FXQcqczMzgcuANoCY1lf5C0nNofxo4BCExEREUlbKvJESpiZ/Wtzx1W4bMzMurr7h0HHISIiIpIJNFxTpOQdv5ljDqjI21hTM6tJrAevB9AGuN3dhwUbloiIiEj6UU+eiATOzCa6+z5m1gW4CrgHeEsLr4iIiIhsPfXkiZQiMzsW2AuovG6fu3cLLqKUtW4u3jHEiruJZmabe4CIiIiIJBYKOgCRTGVm3YHTgWuIFTGnAtsHGlTq+tHMhhEr8oaaWQ0gGnBMIiIiImlJwzVFSomZ/ezuLYt8rw585O5HBh1bqjGzENAKmO7uS+L3F9zW3X8ONjIRERGR9KOePJHSsyr+faWZNQHygR0CjCeVvQc0BpYBuPsiFXgiIiIi/4yKPJHS85mZbQM8CfwEzATeCTKgFNYdOAuYamaPmdnuQQckIiIikq40XFOkDJhZJaCyuy8NOpZUZma1gDOBu4A5xG6n0Nfd8wMNTERERCSNqMgTKUVmdjDQnCIr2bp778ACSmHxeXjnAOcC2UA/oB2wt7t3CDA0ERERkbSiWyiIlBIz6wPsBEwAIvHdDqjI24CZfQTsDvQBjnf3nPihd81sXHCRiYiIiKQf9eSJlBIz+wPY0/Ui2yIzO9zdvwo6DhEREZFMoIVXRErPr0CjoINIZWa2n5k1Wlfgmdl5ZjbAzF4wszpBxyciIiKSjtSTJ1JKzGwEsXu//QCsWbff3U8IKqZUY2Y/AZ3dfbGZHUZs9dFriOVtD3c/Jcj4RERERNKR5uSJlJ77gw4gDYTdfXH859OB19z9Q+BDM5sQXFgiIiIi6UtFnkgpcfdRRbfN7BBi94IblfgR5VLYzLLcvQDoBFxa5Jj+PomIiIj8A3oTJVKKzKwVscLuNGAG8GGgAaWe/sAoM1sIrAL+C2BmOwO6p6CIiIjIP6A5eSIlzMx2Bc4gdlPvRcC7wM3uvn2ggaUoMzsQaAwMc/cV8X27AtXd/adAgxMRERFJQyryREqYmUWJ9Uhd7O7T4vumu/uOwUYmIiIiIuWBbqEgUvK6ArnACDPrYWadAAs4JhEREREpJ9STJ1JKzKwacBKxYZuHA72Aj919WJBxiYiIiEhmU5EnUgbiN/Y+FTjd3Q8POh4RERERyVwq8kRERERERDKI5uSJiIiIiIhkEBV5IiIiIiIiGURFnoiIiIiISAZRkSciIiIiIpJBVOSJiIiIiIhkkP8B9KU1E46O+fsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 1080x1080 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize']=(15,15)\n",
    "\n",
    "g = sns.heatmap(df_train_dataset.corr(), square = True, annot=True)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9c3de9f4",
   "metadata": {},
   "source": [
    "Выборка данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "bac76150",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_train_dataset.drop([\"period_1\",\"period_2\",\"period_3\",\"period_4\",\"id\"], axis = 1)\n",
    "y = df_train_dataset[[\"period_1\",\"period_2\",\"period_3\",\"period_4\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "67c949b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(680, 4)"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "831064c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_X, val_x, train_y, val_y = train_test_split(X, y, test_size=0.3, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "9a67cf82",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "period_1    100\n",
       "period_2     84\n",
       "period_3     40\n",
       "period_4     72\n",
       "dtype: int64"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_y.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "5d965dff",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_y = train_y.fillna(0)\n",
    "val_y = val_y.fillna(0)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9ccaaa38",
   "metadata": {},
   "source": [
    "Обучение модели"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "02cbb4b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_1 = RandomForestClassifier(random_state=1)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "d48702b1",
   "metadata": {},
   "source": [
    "numerical_transformer = SimpleImputer(strategy='constant')\n",
    "categorical_transformer = Pipeline(steps=[('imputer',SimpleImputer(strategy='most_frequent')),\n",
    "                                         ('onehot',OneHotEncoder(handle_unknown='ignore'))])\n",
    "preprocessor=ColumnTransformer(transformers=[('num',numerical_transformer,numerical_cols),\n",
    "                                            ('cat', categorical_transformer, categorical_cols)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "73afb7bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(random_state=1)"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_1.fit(train_X,train_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "9f057e33",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Проверка первой модели на метрике mean_absolute_error =  457.3897058823529\n"
     ]
    }
   ],
   "source": [
    "val_predictions = model_1.predict(val_x)\n",
    "print('Проверка первой модели на метрике mean_absolute_error = ',mean_absolute_error(val_y,val_predictions))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "18c91ea8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Проверка первой модели на метрике Recall = 0.07315468067668902\n"
     ]
    }
   ],
   "source": [
    "result = 0 \n",
    "\n",
    "for i in range(4):\n",
    "  result += recall_score(val_y[\"period_\" + str(i+1)], val_predictions[:,i], average='macro', zero_division=True)\n",
    "\n",
    "print(\"Проверка первой модели на метрике Recall =\",result/4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "af68737b",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_2 = "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
